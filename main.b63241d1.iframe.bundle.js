(self.webpackChunkexpansion_ag_grid_angular=self.webpackChunkexpansion_ag_grid_angular||[]).push([[179],{"./projects/expansion/ag-grid-angular/.storybook/preview.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>_storybook_preview});var angular=__webpack_require__("./node_modules/@storybook/addon-docs/angular/index.js");const documentation_namespaceObject=JSON.parse('{"pipes":[],"interfaces":[{"name":"AgGridContext","id":"interface-AgGridContext-6fd7f50d506b037c58659d0f28a657a20a046b8664a0969ce4eb5be360024a176bdafe2454d8c4d83d3d6c72ea5d906770a4e7a012abf576093bf0f1acc8aa55","file":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-context.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { IRowNode } from \'ag-grid-community\';\\r\\n\\r\\nimport { AgGridEvent } from \'./ag-grid-event\';\\r\\nimport { AgGridFilters } from \'./ag-grid-filters\';\\r\\n\\r\\nexport interface AgGridContext<TData = any> {\\r\\n  /** Used by `suppressKeyboardEvent` on key `delete` press etc */\\r\\n  deleteFn?: (IRowNode: IRowNode<TData>) => void;\\r\\n  /** Tells grid what entity it\'s working with. Often used by `getRows` endpoint */\\r\\n  entity?: string;\\r\\n  /** Extra filters added on top of standard grid filters. Often used in `getRows` request */\\r\\n  externalFilters?: AgGridFilters;\\r\\n  /** An arrow function to load client side data. Used by `reload` toolbar action */\\r\\n  reloadData?: (event?: AgGridEvent<TData>) => void;\\r\\n  /** Grid global serach text. Used by server-side grid\'s datasource to add same `quickFilter` functionality as ag-grids client-side `quickFilter` */\\r\\n  quickFilterText?: string;\\r\\n  /** Object of keyboard keys to suppress. `key` must match `params.event.key` */\\r\\n  // suppressKeyboard?: {\\r\\n  //   [key: string]: (params: SuppressKeyboardEventParams<TData>) => boolean;\\r\\n  // };\\r\\n  /** Total row count for server-side grids. Used by `RowCountStatusPanel` */\\r\\n  totalCount?: number;\\r\\n}\\r\\n","properties":[{"name":"deleteFn","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"<p>Used by <code>suppressKeyboardEvent</code> on key <code>delete</code> press etc</p>\\n","line":8,"rawdescription":"\\nUsed by `suppressKeyboardEvent` on key `delete` press etc"},{"name":"entity","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Tells grid what entity it&#39;s working with. Often used by <code>getRows</code> endpoint</p>\\n","line":10,"rawdescription":"\\nTells grid what entity it\'s working with. Often used by `getRows` endpoint"},{"name":"externalFilters","deprecated":false,"deprecationMessage":"","type":"AgGridFilters","optional":true,"description":"<p>Extra filters added on top of standard grid filters. Often used in <code>getRows</code> request</p>\\n","line":12,"rawdescription":"\\nExtra filters added on top of standard grid filters. Often used in `getRows` request"},{"name":"quickFilterText","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Grid global serach text. Used by server-side grid&#39;s datasource to add same <code>quickFilter</code> functionality as ag-grids client-side <code>quickFilter</code></p>\\n","line":16,"rawdescription":"\\nGrid global serach text. Used by server-side grid\'s datasource to add same `quickFilter` functionality as ag-grids client-side `quickFilter`"},{"name":"reloadData","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"<p>An arrow function to load client side data. Used by <code>reload</code> toolbar action</p>\\n","line":14,"rawdescription":"\\nAn arrow function to load client side data. Used by `reload` toolbar action"},{"name":"totalCount","deprecated":false,"deprecationMessage":"","type":"number","optional":true,"description":"<p>Total row count for server-side grids. Used by <code>RowCountStatusPanel</code></p>\\n","line":22,"rawdescription":"\\nTotal row count for server-side grids. Used by `RowCountStatusPanel`"}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"AgGridEvent","id":"interface-AgGridEvent-0dea394125055f8cb7865b4355fbfa286cd97f5724aa8cec06a7a1db4742bf4e8e0d01cca1b59148bdde48ed9eecc226f1277077b501e6014868c68458fff391","file":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-event.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { ColumnApi, GridApi } from \'ag-grid-community\';\\r\\nimport { AgGridContext } from \'./ag-grid-context\';\\r\\n\\r\\nexport interface AgGridEvent<TData = any> {\\r\\n  api: GridApi<TData>;\\r\\n  columnApi: ColumnApi;\\r\\n  context: AgGridContext<TData>;\\r\\n}\\r\\n","properties":[{"name":"api","deprecated":false,"deprecationMessage":"","type":"GridApi<TData>","optional":false,"description":"","line":5},{"name":"columnApi","deprecated":false,"deprecationMessage":"","type":"ColumnApi","optional":false,"description":"","line":6},{"name":"context","deprecated":false,"deprecationMessage":"","type":"AgGridContext<TData>","optional":false,"description":"","line":7}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"AgGridFilter","id":"interface-AgGridFilter-c6f0e12a2d64ac2f20f3de636e79c7770a77adbea4d5a8f695f5abf028aadf7004c46f3a5b1128033764ea44d1a7c643e96b91e296f295c20bcdb01136bd708a","file":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-filters.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import {\\r\\n  DateFilterModel,\\r\\n  NumberFilterModel,\\r\\n  TextFilterModel,\\r\\n} from \'ag-grid-community\';\\r\\nimport { ISimpleFilterModelType } from \'ag-grid-community/dist/lib/filter/provided/simpleFilter\';\\r\\n\\r\\nexport interface AgGridFilters {\\r\\n  [key: string]: AgGridFilter;\\r\\n}\\r\\n\\r\\nexport interface AgGridFilter {\\r\\n  condition1?: TextFilterModel | NumberFilterModel | DateFilterModel;\\r\\n  condition2?: TextFilterModel | NumberFilterModel | DateFilterModel;\\r\\n  /** Format: YYYY-MM-DD hh:mm:ss */\\r\\n  dateFrom?: string | null;\\r\\n  /** Format: YYYY-MM-DD hh:mm:ss */\\r\\n  dateTo?: string | null;\\r\\n  filterType?: \'date\' | \'number\' | \'set\' | \'text\';\\r\\n  /** Value to filter by */\\r\\n  filter?: boolean | number | string | null;\\r\\n  operator?: \'AND\' | \'OR\';\\r\\n  /**\\r\\n   * - Date - default: `equals`\\r\\n   * - Number - default: `equals`\\r\\n   * - Text - default: `contains`\\r\\n   *\\r\\n   * See docs: https://www.ag-grid.com/angular-data-grid/filter-provided-simple/#simple-filter-options */\\r\\n  type?: ISimpleFilterModelType;\\r\\n  /** Instead of `filter` property when `filterType = \'set\'` */\\r\\n  values?: any[];\\r\\n}\\r\\n","properties":[{"name":"condition1","deprecated":false,"deprecationMessage":"","type":"TextFilterModel | NumberFilterModel | DateFilterModel","optional":true,"description":"","line":13},{"name":"condition2","deprecated":false,"deprecationMessage":"","type":"TextFilterModel | NumberFilterModel | DateFilterModel","optional":true,"description":"","line":14},{"name":"dateFrom","deprecated":false,"deprecationMessage":"","type":"string | null","optional":true,"description":"<p>Format: YYYY-MM-DD hh:mm:ss</p>\\n","line":16,"rawdescription":"\\nFormat: YYYY-MM-DD hh:mm:ss"},{"name":"dateTo","deprecated":false,"deprecationMessage":"","type":"string | null","optional":true,"description":"<p>Format: YYYY-MM-DD hh:mm:ss</p>\\n","line":18,"rawdescription":"\\nFormat: YYYY-MM-DD hh:mm:ss"},{"name":"filter","deprecated":false,"deprecationMessage":"","type":"boolean | number | string | null","optional":true,"description":"<p>Value to filter by</p>\\n","line":21,"rawdescription":"\\nValue to filter by"},{"name":"filterType","deprecated":false,"deprecationMessage":"","type":"\\"date\\" | \\"number\\" | \\"set\\" | \\"text\\"","optional":true,"description":"","line":19},{"name":"operator","deprecated":false,"deprecationMessage":"","type":"\\"AND\\" | \\"OR\\"","optional":true,"description":"","line":22},{"name":"type","deprecated":false,"deprecationMessage":"","type":"ISimpleFilterModelType","optional":true,"description":"<ul>\\n<li>Date - default: <code>equals</code></li>\\n<li>Number - default: <code>equals</code></li>\\n<li>Text - default: <code>contains</code></li>\\n</ul>\\n<p>See docs: <a href=\\"https://www.ag-grid.com/angular-data-grid/filter-provided-simple/#simple-filter-options\\">https://www.ag-grid.com/angular-data-grid/filter-provided-simple/#simple-filter-options</a></p>\\n","line":29,"rawdescription":"\\n\\n- Date - default: `equals`\\n- Number - default: `equals`\\n- Text - default: `contains`\\n\\nSee docs: https://www.ag-grid.com/angular-data-grid/filter-provided-simple/#simple-filter-options"},{"name":"values","deprecated":false,"deprecationMessage":"","type":"any[]","optional":true,"description":"<p>Instead of <code>filter</code> property when <code>filterType = &#39;set&#39;</code></p>\\n","line":31,"rawdescription":"\\nInstead of `filter` property when `filterType = \'set\'`"}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"AgGridFilters","id":"interface-AgGridFilters-c6f0e12a2d64ac2f20f3de636e79c7770a77adbea4d5a8f695f5abf028aadf7004c46f3a5b1128033764ea44d1a7c643e96b91e296f295c20bcdb01136bd708a","file":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-filters.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import {\\r\\n  DateFilterModel,\\r\\n  NumberFilterModel,\\r\\n  TextFilterModel,\\r\\n} from \'ag-grid-community\';\\r\\nimport { ISimpleFilterModelType } from \'ag-grid-community/dist/lib/filter/provided/simpleFilter\';\\r\\n\\r\\nexport interface AgGridFilters {\\r\\n  [key: string]: AgGridFilter;\\r\\n}\\r\\n\\r\\nexport interface AgGridFilter {\\r\\n  condition1?: TextFilterModel | NumberFilterModel | DateFilterModel;\\r\\n  condition2?: TextFilterModel | NumberFilterModel | DateFilterModel;\\r\\n  /** Format: YYYY-MM-DD hh:mm:ss */\\r\\n  dateFrom?: string | null;\\r\\n  /** Format: YYYY-MM-DD hh:mm:ss */\\r\\n  dateTo?: string | null;\\r\\n  filterType?: \'date\' | \'number\' | \'set\' | \'text\';\\r\\n  /** Value to filter by */\\r\\n  filter?: boolean | number | string | null;\\r\\n  operator?: \'AND\' | \'OR\';\\r\\n  /**\\r\\n   * - Date - default: `equals`\\r\\n   * - Number - default: `equals`\\r\\n   * - Text - default: `contains`\\r\\n   *\\r\\n   * See docs: https://www.ag-grid.com/angular-data-grid/filter-provided-simple/#simple-filter-options */\\r\\n  type?: ISimpleFilterModelType;\\r\\n  /** Instead of `filter` property when `filterType = \'set\'` */\\r\\n  values?: any[];\\r\\n}\\r\\n","properties":[],"indexSignatures":[{"id":"index-declaration-c6f0e12a2d64ac2f20f3de636e79c7770a77adbea4d5a8f695f5abf028aadf7004c46f3a5b1128033764ea44d1a7c643e96b91e296f295c20bcdb01136bd708a","args":[{"name":"key","type":"string","deprecated":false,"deprecationMessage":""}],"returnType":"AgGridFilter","line":8,"deprecated":false,"deprecationMessage":""}],"kind":181,"methods":[],"extends":[]},{"name":"AgGridOptions","id":"interface-AgGridOptions-dc80b7279aa220eed95a938992bd7fa6084f63aa53d50dab7e28008b0cc04e3efb277b50747c38d04bd537a55ce3cfe528d18250a34fa8996bde42e5a66b6257","file":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-options.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { GridOptions } from \'ag-grid-community\';\\r\\nimport { AgGridContext } from \'./ag-grid-context\';\\r\\n\\r\\n/** Ag-grid `GridOptions` including typed `context` */\\r\\nexport interface AgGridOptions<TData = any> extends GridOptions<TData> {\\r\\n  /** Shared contextual information to be passed around in the grid */\\r\\n  context?: AgGridContext<TData>;\\r\\n}\\r\\n","properties":[{"name":"context","deprecated":false,"deprecationMessage":"","type":"AgGridContext<TData>","optional":true,"description":"<p>Shared contextual information to be passed around in the grid</p>\\n","line":7,"rawdescription":"\\nShared contextual information to be passed around in the grid"}],"indexSignatures":[],"kind":171,"description":"<p>Ag-grid <code>GridOptions</code> including typed <code>context</code></p>\\n","rawdescription":"\\nAg-grid `GridOptions` including typed `context`","methods":[],"extends":["GridOptions"]},{"name":"AgGridToolbarAction","id":"interface-AgGridToolbarAction-ffc2d005e377a86a5f041e9c7b74c206f2c7e05308a0c995dc7f2a8316ba02b8d000dfbda867abd3b05645bee32b1376b96bec8efdf853b3ad3b078abaf781b2","file":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-toolbar-action.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { AgGridEvent } from \'./ag-grid-event\';\\r\\n\\r\\nexport interface AgGridToolbarAction<TData = any> {\\r\\n  /** Action color */\\r\\n  color?: string;\\r\\n  /** Default: `false`. */\\r\\n  disabled?: boolean;\\r\\n  /** If no icon is provided, the `ToolbarAction` will be treated as a separator. */\\r\\n  icon?: string;\\r\\n  /** ID for toolbar action, used to set html id. */\\r\\n  id?: string;\\r\\n  /** tooltip translated text. */\\r\\n  tooltip?: string;\\r\\n  /** Arrow function to execute on click. */\\r\\n  clickFn?: (event: AgGridToolbarActionEvent<TData>) => void;\\r\\n}\\r\\nexport interface AgGridToolbarActionEvent<TData = any>\\r\\n  extends AgGridEvent<TData> {}\\r\\n","properties":[{"name":"clickFn","deprecated":false,"deprecationMessage":"","type":"function","optional":true,"description":"<p>Arrow function to execute on click.</p>\\n","line":15,"rawdescription":"\\nArrow function to execute on click."},{"name":"color","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>Action color</p>\\n","line":5,"rawdescription":"\\nAction color"},{"name":"disabled","deprecated":false,"deprecationMessage":"","type":"boolean","optional":true,"description":"<p>Default: <code>false</code>.</p>\\n","line":7,"rawdescription":"\\nDefault: `false`."},{"name":"icon","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>If no icon is provided, the <code>ToolbarAction</code> will be treated as a separator.</p>\\n","line":9,"rawdescription":"\\nIf no icon is provided, the `ToolbarAction` will be treated as a separator."},{"name":"id","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>ID for toolbar action, used to set html id.</p>\\n","line":11,"rawdescription":"\\nID for toolbar action, used to set html id."},{"name":"tooltip","deprecated":false,"deprecationMessage":"","type":"string","optional":true,"description":"<p>tooltip translated text.</p>\\n","line":13,"rawdescription":"\\ntooltip translated text."}],"indexSignatures":[],"kind":171,"methods":[],"extends":[]},{"name":"AgGridToolbarActionEvent","id":"interface-AgGridToolbarActionEvent-ffc2d005e377a86a5f041e9c7b74c206f2c7e05308a0c995dc7f2a8316ba02b8d000dfbda867abd3b05645bee32b1376b96bec8efdf853b3ad3b078abaf781b2","file":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-toolbar-action.ts","deprecated":false,"deprecationMessage":"","type":"interface","sourceCode":"import { AgGridEvent } from \'./ag-grid-event\';\\r\\n\\r\\nexport interface AgGridToolbarAction<TData = any> {\\r\\n  /** Action color */\\r\\n  color?: string;\\r\\n  /** Default: `false`. */\\r\\n  disabled?: boolean;\\r\\n  /** If no icon is provided, the `ToolbarAction` will be treated as a separator. */\\r\\n  icon?: string;\\r\\n  /** ID for toolbar action, used to set html id. */\\r\\n  id?: string;\\r\\n  /** tooltip translated text. */\\r\\n  tooltip?: string;\\r\\n  /** Arrow function to execute on click. */\\r\\n  clickFn?: (event: AgGridToolbarActionEvent<TData>) => void;\\r\\n}\\r\\nexport interface AgGridToolbarActionEvent<TData = any>\\r\\n  extends AgGridEvent<TData> {}\\r\\n","properties":[],"indexSignatures":[],"methods":[],"extends":["AgGridEvent"]}],"injectables":[],"guards":[],"interceptors":[],"classes":[],"directives":[],"components":[{"name":"AgGridExtensionComponent","id":"component-AgGridExtensionComponent-20bca818415ccc85352b2b475fec3214902c9453ef5342fe1fd0680fea7d2a07b3c06f07d576a31646ed5cfe3cbd0023e4c1f68e11e74620f6b33e0d054fbc56","file":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/ag-grid-expansion.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ag-grid-expansion","styleUrls":["./ag-grid-expansion.component.scss"],"styles":[],"templateUrl":["./ag-grid-expansion.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"actions","defaultValue":"actionsSets.standard","deprecated":false,"deprecationMessage":"","rawdescription":"\\nToolbar actions","description":"<p>Toolbar actions</p>\\n","line":98,"type":"AgGridToolbarAction[]","decorators":[]},{"name":"debounceSearch","defaultValue":"500","deprecated":false,"deprecationMessage":"","rawdescription":"\\nDebounce in ms for seach input","description":"<p>Debounce in ms for seach input</p>\\n","line":100,"type":"number","decorators":[]},{"name":"enableSearch","defaultValue":"true","deprecated":false,"deprecationMessage":"","rawdescription":"\\nEnable search field","description":"<p>Enable search field</p>\\n","line":102,"type":"boolean","decorators":[]},{"name":"placeholderSearch","defaultValue":"\'Search...\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\nSeach placeholdet text","description":"<p>Seach placeholdet text</p>\\n","line":104,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[{"name":"agGrid","deprecated":false,"deprecationMessage":"","type":"AgGridAngular","optional":false,"description":"","line":108,"decorators":[{"name":"ContentChild","stringifiedArguments":"AgGridAngular"}],"modifierKind":[170]},{"name":"context","deprecated":false,"deprecationMessage":"","type":"AgGridContext","optional":false,"description":"","line":106}],"methodsClass":[{"name":"ngAfterViewInit","args":[],"optional":false,"returnType":"void","typeParameters":[],"line":120,"deprecated":false,"deprecationMessage":""}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"<p>Expands ag-grid with a toolbar, search and actions.</p>\\n<h2>Features:</h2>\\n<ul>\\n<li>Quick search</li>\\n<li>Toolbar actions</li>\\n</ul>\\n<h2>Usage</h2>\\n<p><strong>Class:</strong> <code>AgGridExtensionComponent</code></p>\\n<p><strong>Constants:</strong></p>\\n<ul>\\n<li><code>actionsSets: AgGridToolbarAction[]</code> =&gt; Predefined sets of actions</li>\\n<li><code>presetActions: AgGridToolbarAction</code> =&gt; Predefined single actions. Fit columns, reset columns, cvs export etc</li>\\n</ul>\\n<p><strong>Interfaces:</strong></p>\\n<ul>\\n<li><code>AgGridOptions</code> =&gt; <code>GridOptions</code> with <code>gridOptions.context</code> typed as <code>AgGridContext</code></li>\\n<li><code>AgGridContext</code> =&gt; Interface for ag-grid <code>context</code></li>\\n<li><code>AgGridFilter</code> =&gt; Interface for grid filter</li>\\n<li><code>AgGridFilters</code> =&gt; Interface for object of <code>AgGridFilter</code>&#39;s</li>\\n<li><code>AgGridToolbarAction</code> =&gt; Properties for a toolbar action</li>\\n<li><code>AgGridToolbarActionEvent</code> =&gt; Type for the toolbar action click callback function</li>\\n</ul>\\n<p><strong>Module:</strong> <code>import { AgGridExpansionModule } from &#39;@expansion/ag-grid-angular&#39;;</code></p>\\n<p><strong>Selector:</strong> <code>ag-grid-expansion</code></p>\\n<p><strong>Content projection:</strong></p>\\n<ul>\\n<li>Multi-slot<ul>\\n<li><code>toolbarLeft</code> =&gt; Toolbar left</li>\\n<li><code>toolbarCenter</code> =&gt; Toolbar center</li>\\n<li><code>toolbarRight</code> =&gt; Toolbar right</li>\\n<li><code>actionsLeft</code> =&gt; pre actions</li>\\n<li><code>actionsRight</code> =&gt; post actions</li>\\n</ul>\\n</li>\\n<li>Single-slot</li>\\n</ul>\\n<h3>Typescript</h3>\\n<b>Example :</b><div><pre class=\\"line-numbers\\"><code class=\\"language-ts\\">export class ExampleGridComponent {\\n  actions: AgGridToolbarAction[];\\n  gridOptions: AgGridOptions;\\n}</code></pre></div><h3>HTML</h3>\\n<b>Example :</b><div><pre class=\\"line-numbers\\"><code class=\\"language-html\\">&lt;ag-grid-expansion [actions]=&quot;actions&quot;&gt;\\n  &lt;ag-grid-angular\\n    class=&quot;ag-theme-balham&quot;\\n    [gridOptions]=&quot;gridOptions&quot;&gt;\\n  &lt;/ag-grid-angular&gt;\\n&lt;/ag-grid-expansion&gt;</code></pre></div><h2>Technical requirements</h2>\\n<p>Either <code>context</code> or <code>gridOptions.context</code> must exist on the <code>ag-grid-angular</code> element.</p>\\n<h3>Global search</h3>\\n<h4>Client side</h4>\\n<p>Works out of the box for client side grids.</p>\\n<h4>Server side</h4>\\n<p>We need to use <code>quickFilterText</code> in our datasource implementation <code>IServerSideDatasource</code> like below.</p>\\n<b>Example :</b><div><pre class=\\"line-numbers\\"><code class=\\"language-ts\\">  export class ExampleDatasource implements IServerSideDatasource {\\n      getRows(params: IServerSideGetRowsParams): void {\\n        const { quickFilterText } = params.context as AgGridToolbarContext;\\n        // Then use `quickFilterText` in backend call etc..\\n      }\\n  }</code></pre></div>","rawdescription":"\\n\\nExpands ag-grid with a toolbar, search and actions.\\n## Features:\\n- Quick search\\n- Toolbar actions\\n\\n## Usage\\n\\n**Class:** `AgGridExtensionComponent`\\n\\n**Constants:**\\n- `actionsSets: AgGridToolbarAction[]` => Predefined sets of actions\\n- `presetActions: AgGridToolbarAction` => Predefined single actions. Fit columns, reset columns, cvs export etc\\n\\n**Interfaces:**\\n- `AgGridOptions` => `GridOptions` with `gridOptions.context` typed as `AgGridContext`\\n- `AgGridContext` => Interface for ag-grid `context`\\n- `AgGridFilter` => Interface for grid filter\\n- `AgGridFilters` => Interface for object of `AgGridFilter`\'s\\n- `AgGridToolbarAction` => Properties for a toolbar action\\n- `AgGridToolbarActionEvent` => Type for the toolbar action click callback function\\n\\n**Module:** `import { AgGridExpansionModule } from \'@expansion/ag-grid-angular\';`\\n\\n**Selector:** `ag-grid-expansion`\\n\\n**Content projection:**\\n- Multi-slot\\n  - `toolbarLeft` => Toolbar left\\n  - `toolbarCenter` => Toolbar center\\n  - `toolbarRight` => Toolbar right\\n  - `actionsLeft` => pre actions\\n  - `actionsRight` => post actions\\n- Single-slot\\n\\n### Typescript\\n```ts\\nexport class ExampleGridComponent {\\n  actions: AgGridToolbarAction[];\\n  gridOptions: AgGridOptions;\\n}\\n```\\n\\n### HTML\\n```html\\n<ag-grid-expansion [actions]=\\"actions\\">\\n  <ag-grid-angular\\n    class=\\"ag-theme-balham\\"\\n    [gridOptions]=\\"gridOptions\\">\\n  </ag-grid-angular>\\n</ag-grid-expansion>\\n```\\n\\n## Technical requirements\\n\\nEither `context` or `gridOptions.context` must exist on the `ag-grid-angular` element.\\n\\n### Global search\\n\\n#### Client side\\n\\nWorks out of the box for client side grids.\\n\\n#### Server side\\n\\nWe need to use `quickFilterText` in our datasource implementation `IServerSideDatasource` like below.\\n\\n```ts\\n  export class ExampleDatasource implements IServerSideDatasource {\\n      getRows(params: IServerSideGetRowsParams): void {\\n        const { quickFilterText } = params.context as AgGridToolbarContext;\\n        // Then use `quickFilterText` in backend call etc..\\n      }\\n  }\\n```\\n","type":"component","sourceCode":"import {\\n  ChangeDetectorRef,\\n  Component,\\n  ContentChild,\\n  Input,\\n} from \'@angular/core\';\\nimport { AgGridAngular } from \'ag-grid-angular\';\\nimport {\\n  AgGridToolbarAction,\\n  AgGridToolbarActionEvent,\\n} from \'./interfaces/ag-grid-toolbar-action\';\\nimport { AgGridContext } from \'./interfaces/ag-grid-context\';\\nimport { actionsSets } from \'./actions-sets\';\\n\\n/**\\n * Expands ag-grid with a toolbar, search and actions.\\n * ## Features:\\n * - Quick search\\n * - Toolbar actions\\n *\\n * ## Usage\\n *\\n * **Class:** `AgGridExtensionComponent`\\n *\\n * **Constants:**\\n * - `actionsSets: AgGridToolbarAction[]` => Predefined sets of actions\\n * - `presetActions: AgGridToolbarAction` => Predefined single actions. Fit columns, reset columns, cvs export etc\\n *\\n * **Interfaces:**\\n * - `AgGridOptions` => `GridOptions` with `gridOptions.context` typed as `AgGridContext`\\n * - `AgGridContext` => Interface for ag-grid `context`\\n * - `AgGridFilter` => Interface for grid filter\\n * - `AgGridFilters` => Interface for object of `AgGridFilter`\'s\\n * - `AgGridToolbarAction` => Properties for a toolbar action\\n * - `AgGridToolbarActionEvent` => Type for the toolbar action click callback function\\n *\\n * **Module:** `import { AgGridExpansionModule } from \'@expansion/ag-grid-angular\';`\\n *\\n * **Selector:** `ag-grid-expansion`\\n *\\n * **Content projection:**\\n * - Multi-slot\\n *   - `toolbarLeft` => Toolbar left\\n *   - `toolbarCenter` => Toolbar center\\n *   - `toolbarRight` => Toolbar right\\n *   - `actionsLeft` => pre actions\\n *   - `actionsRight` => post actions\\n * - Single-slot\\n *\\n * ### Typescript\\n * ```ts\\n * export class ExampleGridComponent {\\n *   actions: AgGridToolbarAction[];\\n *   gridOptions: AgGridOptions;\\n * }\\n * ```\\n *\\n * ### HTML\\n * ```html\\n * <ag-grid-expansion [actions]=\\"actions\\">\\n *   <ag-grid-angular\\n *     class=\\"ag-theme-balham\\"\\n *     [gridOptions]=\\"gridOptions\\">\\n *   </ag-grid-angular>\\n * </ag-grid-expansion>\\n * ```\\n *\\n * ## Technical requirements\\n *\\n * Either `context` or `gridOptions.context` must exist on the `ag-grid-angular` element.\\n *\\n * ### Global search\\n *\\n * #### Client side\\n *\\n * Works out of the box for client side grids.\\n *\\n * #### Server side\\n *\\n * We need to use `quickFilterText` in our datasource implementation `IServerSideDatasource` like below.\\n *\\n * ```ts\\n *   export class ExampleDatasource implements IServerSideDatasource {\\n *       getRows(params: IServerSideGetRowsParams): void {\\n *         const { quickFilterText } = params.context as AgGridToolbarContext;\\n *         // Then use `quickFilterText` in backend call etc..\\n *       }\\n *   }\\n * ```\\n */\\n@Component({\\n  selector: \'ag-grid-expansion\',\\n  templateUrl: \'./ag-grid-expansion.component.html\',\\n  styleUrls: [\'./ag-grid-expansion.component.scss\'],\\n})\\nexport class AgGridExtensionComponent {\\n  /** Toolbar actions */\\n  @Input() actions: AgGridToolbarAction[] = actionsSets.standard;\\n  /** Debounce in ms for seach input */\\n  @Input() debounceSearch = 500;\\n  /** Enable search field*/\\n  @Input() enableSearch = true;\\n  /** Seach placeholdet text */\\n  @Input() placeholderSearch = \'Search...\';\\n\\n  context!: AgGridContext;\\n\\n  @ContentChild(AgGridAngular) agGrid!: AgGridAngular;\\n\\n  constructor(private cdr: ChangeDetectorRef) {}\\n\\n  get toolbarActionEvent(): AgGridToolbarActionEvent {\\n    return {\\n      api: this.agGrid.api,\\n      columnApi: this.agGrid.columnApi,\\n      context: this.context,\\n    };\\n  }\\n\\n  ngAfterViewInit(): void {\\n    this.context = this.agGrid.context || this.agGrid.gridOptions?.context;\\n    // agGrid changes after initializing itself\\n    this.cdr.detectChanges();\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\r\\n  display: flex;\\r\\n  height: 100%;\\r\\n  flex-direction: column;\\r\\n  ::ng-deep ag-grid-angular {\\r\\n    height: 100%;\\r\\n  }\\r\\n  ::ng-deep .ag-overlay {\\r\\n    height: calc(100% - 62px);\\r\\n    margin-top: 70px;\\r\\n  }\\r\\n}\\r\\n\\r\\n::ng-deep .toolbar-action-separator {\\r\\n  border-right: 1px solid var(--grey300);\\r\\n  height: 22px;\\r\\n}\\r\\n","styleUrl":"./ag-grid-expansion.component.scss"}],"stylesData":"","constructorObj":{"name":"constructor","description":"","deprecated":false,"deprecationMessage":"","args":[{"name":"cdr","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":""}],"line":108,"jsdoctags":[{"name":"cdr","type":"ChangeDetectorRef","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},"extends":[],"accessors":{"toolbarActionEvent":{"name":"toolbarActionEvent","getSignature":{"name":"toolbarActionEvent","type":"","returnType":"AgGridToolbarActionEvent","line":112}}},"templateData":"<ag-grid-toolbar\\n  [agGrid]=\\"agGrid\\"\\n  [debounceSearch]=\\"debounceSearch\\"\\n  [enableSearch]=\\"enableSearch\\"\\n  [placeholderSearch]=\\"placeholderSearch\\"\\n>\\n  <ng-content select=\\"[toolbarLeft]\\" toolbarLeft></ng-content>\\n  <ng-content select=\\"[toolbarCenter]\\" toolbarCenter></ng-content>\\n  <ng-content select=\\"[toolbarRight]\\" toolbarRight></ng-content>\\n  \x3c!-- Actions --\x3e\\n  <ng-content select=\\"[actionsLeft]\\" toolbarRight></ng-content>\\n  <ng-container *ngFor=\\"let action of actions\\" toolbarRight>\\n    <ng-container *ngIf=\\"!action?.icon\\">\\n      <span class=\\"toolbar-action-separator\\"></span>\\n    </ng-container>\\n\\n    <ag-grid-toolbar-action\\n      *ngIf=\\"action?.icon\\"\\n      [color]=\\"action?.color\\"\\n      [disabled]=\\"action?.disabled || false\\"\\n      [icon]=\\"action.icon\\"\\n      [id]=\\"action.id\\"\\n      [tooltip]=\\"action.tooltip || \'\'\\"\\n      (click)=\\"action?.clickFn?.(toolbarActionEvent)\\"\\n    ></ag-grid-toolbar-action>\\n  </ng-container>\\n  <ng-content select=\\"[actionsRight]\\" toolbarRight></ng-content>\\n  \x3c!-- Actions END --\x3e\\n</ag-grid-toolbar>\\n<ng-content>\\n  \x3c!-- ag-grid-angular --\x3e\\n</ng-content>\\n"},{"name":"AgGridToolbarActionComponent","id":"component-AgGridToolbarActionComponent-4275df45a21c8884a4de89bd0f2a427e664d81a1eb300a2dfa0bcd62640c673b6c1595789b3116de25e423af40b7ccab45a06e02e93b8fe413acfe48bc4edefd","file":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar-action/ag-grid-toolbar-action.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ag-grid-toolbar-action","styleUrls":["./ag-grid-toolbar-action.component.scss"],"styles":[],"templateUrl":["./ag-grid-toolbar-action.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"color","deprecated":false,"deprecationMessage":"","line":9,"type":"string","decorators":[]},{"name":"disabled","deprecated":false,"deprecationMessage":"","line":10,"type":"boolean","decorators":[]},{"name":"icon","deprecated":false,"deprecationMessage":"","rawdescription":"\\nIcon name. Example `home`\\n- Material icons: https://fonts.google.com/icons\\n\\n### Requirements\\n```html\\nAdd this to your html:\\n<html>\\n  <head>\\n    <link href=\\"https://fonts.googleapis.com/icon?family=Material+Icons+Outlined\\" rel=\\"stylesheet\\" />\\n  </head>\\n<html>\\n```\\n","description":"<p>Icon name. Example <code>home</code></p>\\n<ul>\\n<li>Material icons: <a href=\\"https://fonts.google.com/icons\\">https://fonts.google.com/icons</a></li>\\n</ul>\\n<h3>Requirements</h3>\\n<b>Example :</b><div><pre class=\\"line-numbers\\"><code class=\\"language-html\\">Add this to your html:\\n&lt;html&gt;\\n  &lt;head&gt;\\n    &lt;link href=&quot;https://fonts.googleapis.com/icon?family=Material+Icons+Outlined&quot; rel=&quot;stylesheet&quot; /&gt;\\n  &lt;/head&gt;\\n&lt;html&gt;</code></pre></div>","line":26,"type":"string","decorators":[]},{"name":"id","deprecated":false,"deprecationMessage":"","rawdescription":"\\nID for toolbar action, used to set html id","description":"<p>ID for toolbar action, used to set html id</p>\\n","line":12,"type":"string","decorators":[]},{"name":"tooltip","deprecated":false,"deprecationMessage":"","line":27,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\n\\n@Component({\\n  selector: \'ag-grid-toolbar-action\',\\n  templateUrl: \'./ag-grid-toolbar-action.component.html\',\\n  styleUrls: [\'./ag-grid-toolbar-action.component.scss\'],\\n})\\nexport class AgGridToolbarActionComponent {\\n  @Input() color?: string;\\n  @Input() disabled?: boolean;\\n  /** ID for toolbar action, used to set html id */\\n  @Input() id?: string;\\n  /** Icon name. Example `home`\\n   * - Material icons: https://fonts.google.com/icons\\n   *\\n   * ### Requirements\\n   * ```html\\n   * Add this to your html:\\n   * <html>\\n   *   <head>\\n   *     <link href=\\"https://fonts.googleapis.com/icon?family=Material+Icons+Outlined\\" rel=\\"stylesheet\\" />\\n   *   </head>\\n   * <html>\\n   * ```\\n   */\\n  @Input() icon?: string;\\n  @Input() tooltip?: string;\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":":host {\\r\\n  // Prevent click event on \\"host\\" when .disabled\\r\\n  display: contents;\\r\\n}\\r\\n\\r\\n.toolbar-action {\\r\\n  color: var(--grey700);\\r\\n  font-size: 24px;\\r\\n  padding: 8px;\\r\\n  user-select: none;\\r\\n  &.disabled {\\r\\n    pointer-events: none;\\r\\n    color: var(--grey300);\\r\\n  }\\r\\n  &:hover {\\r\\n    cursor: pointer;\\r\\n    border-radius: 4px;\\r\\n    background: var(--grey100);\\r\\n  }\\r\\n  &:active {\\r\\n    background: var(--grey200);\\r\\n  }\\r\\n}\\r\\n","styleUrl":"./ag-grid-toolbar-action.component.scss"}],"stylesData":"","extends":[],"templateData":"<span\\n  class=\\"toolbar-action material-icons-outlined\\"\\n  [class.disabled]=\\"disabled\\"\\n  [id]=\\"id\\"\\n  [style.color]=\\"color\\"\\n  [title]=\\"tooltip\\"\\n>\\n  {{ icon }}<ng-content></ng-content>\\n</span>\\n"},{"name":"AgGridToolbarComponent","id":"component-AgGridToolbarComponent-3344ac79bb53582e7cdd73af6a551ff17ee65f0d2f7433bd18987955b0265934f3ae8c3e15d248479a7af4d2fbf30f29d5fecb3f15416ac54a933231f87cdcb5","file":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar/ag-grid-toolbar.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ag-grid-toolbar","styleUrls":["./ag-grid-toolbar.component.scss"],"styles":[],"templateUrl":["./ag-grid-toolbar.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"agGrid","deprecated":false,"deprecationMessage":"","line":10,"type":"AgGridAngular","decorators":[]},{"name":"debounceSearch","defaultValue":"500","deprecated":false,"deprecationMessage":"","line":11,"type":"number","decorators":[]},{"name":"enableSearch","defaultValue":"true","deprecated":false,"deprecationMessage":"","line":12,"type":"boolean","decorators":[]},{"name":"placeholderSearch","defaultValue":"\'Search...\'","deprecated":false,"deprecationMessage":"","line":13,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\nimport { AgGridAngular } from \'ag-grid-angular\';\\n\\n@Component({\\n  selector: \'ag-grid-toolbar\',\\n  templateUrl: \'./ag-grid-toolbar.component.html\',\\n  styleUrls: [\'./ag-grid-toolbar.component.scss\'],\\n})\\nexport class AgGridToolbarComponent {\\n  @Input() agGrid!: AgGridAngular;\\n  @Input() debounceSearch = 500;\\n  @Input() enableSearch = true;\\n  @Input() placeholderSearch = \'Search...\';\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":".toolbar {\\r\\n  align-items: center;\\r\\n  background: #f5f7f7;\\r\\n  border: 1px solid var(--grey300);\\r\\n  border-bottom: none;\\r\\n  display: flex;\\r\\n  height: 48px;\\r\\n  overflow-x: auto;\\r\\n  padding: 0px 8px;\\r\\n}\\r\\n.toolbar-content {\\r\\n  width: 100%;\\r\\n  display: flex;\\r\\n  justify-content: space-between;\\r\\n  margin-left: 8px;\\r\\n\\r\\n  &-left {\\r\\n    align-items: center;\\r\\n    display: flex;\\r\\n    gap: 8px;\\r\\n  }\\r\\n  &-center {\\r\\n    align-items: center;\\r\\n    display: flex;\\r\\n    gap: 8px;\\r\\n  }\\r\\n  &-right {\\r\\n    align-items: center;\\r\\n    display: flex;\\r\\n  }\\r\\n}\\r\\n","styleUrl":"./ag-grid-toolbar.component.scss"}],"stylesData":"","extends":[],"templateData":"<div class=\\"toolbar\\">\\r\\n  <ag-grid-toolbar-search\\r\\n    *ngIf=\\"enableSearch\\"\\r\\n    [agGrid]=\\"agGrid\\"\\r\\n    [debounceTime]=\\"debounceSearch\\"\\r\\n    [placeholder]=\\"placeholderSearch\\"\\r\\n  ></ag-grid-toolbar-search>\\r\\n  <div class=\\"toolbar-content\\">\\r\\n    <div class=\\"toolbar-content-left\\">\\r\\n      <ng-content select=\\"[toolbarLeft]\\"></ng-content>\\r\\n    </div>\\r\\n    <div class=\\"toolbar-content-center\\">\\r\\n      <ng-content select=\\"[toolbarCenter]\\"></ng-content>\\r\\n    </div>\\r\\n    <div class=\\"toolbar-content-right\\">\\r\\n      <ng-content select=\\"[toolbarRight]\\"></ng-content>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n"},{"name":"AgGridToolbarSearchComponent","id":"component-AgGridToolbarSearchComponent-babccc47e2565ca491f4bca8193f0cd0738df900b5aa3403d0ab21d9c79fe7d603dde58a767e814aa7f95b933719929b7397cabd1385b57e5cf63ecb055d7346","file":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"ag-grid-toolbar-search","styleUrls":["./ag-grid-toolbar-search.component.scss"],"styles":[],"templateUrl":["./ag-grid-toolbar-search.component.html"],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"agGrid","deprecated":false,"deprecationMessage":"","line":12,"type":"AgGridAngular","decorators":[]},{"name":"debounceTime","defaultValue":"500","deprecated":false,"deprecationMessage":"","line":13,"type":"number","decorators":[]},{"name":"placeholder","defaultValue":"\'Search...\'","deprecated":false,"deprecationMessage":"","line":14,"type":"string","decorators":[]}],"outputsClass":[],"propertiesClass":[],"methodsClass":[{"name":"onSearch","args":[{"type":"any","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":20,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"type":"any","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]},{"name":"setQuickFilter","args":[{"name":"term","type":"string","deprecated":false,"deprecationMessage":""}],"optional":false,"returnType":"void","typeParameters":[],"line":41,"deprecated":false,"deprecationMessage":"","jsdoctags":[{"name":"term","type":"string","deprecated":false,"deprecationMessage":"","tagName":{"text":"param"}}]}],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { Component, Input } from \'@angular/core\';\\nimport { AgGridAngular } from \'ag-grid-angular\';\\nimport { AgGridContext } from \'../../interfaces/ag-grid-context\';\\n\\nlet timer: any;\\n@Component({\\n  selector: \'ag-grid-toolbar-search\',\\n  templateUrl: \'./ag-grid-toolbar-search.component.html\',\\n  styleUrls: [\'./ag-grid-toolbar-search.component.scss\'],\\n})\\nexport class AgGridToolbarSearchComponent {\\n  @Input() agGrid!: AgGridAngular;\\n  @Input() debounceTime = 500;\\n  @Input() placeholder = \'Search...\';\\n\\n  get context(): AgGridContext {\\n    return this.agGrid.context || this.agGrid.gridOptions?.context;\\n  }\\n\\n  onSearch({ target }: any) {\\n    const { api } = this.agGrid;\\n    clearTimeout(timer);\\n    timer = setTimeout(() => {\\n      const type = api.getModel().getType();\\n      if (type === \'serverSide\') {\\n        this.setQuickFilter(target.value);\\n        api.onFilterChanged();\\n      } else {\\n        api.setQuickFilter(target.value);\\n        this.setQuickFilter(target.value);\\n      }\\n      if (\\n        this.agGrid.gridOptions?.rowSelection !== \'multiple\' &&\\n        this.agGrid.rowSelection !== \'multiple\'\\n      ) {\\n        api.deselectAll();\\n      }\\n    }, this.debounceTime);\\n  }\\n\\n  setQuickFilter(term: string) {\\n    if (this.context) {\\n      this.context.quickFilterText = term;\\n    }\\n  }\\n}\\n","assetsDirs":[],"styleUrlsData":[{"data":"input {\\r\\n  border: 1px solid var(--grey300);\\r\\n  border-radius: 4px;\\r\\n  height: 30px;\\r\\n  padding: 0px 8px 0px 28px;\\r\\n  &:hover:not(:disabled) {\\r\\n    border-color: var(--secondary300);\\r\\n  }\\r\\n  &:focus-visible {\\r\\n    outline: none;\\r\\n    border-color: var(--secondary500);\\r\\n  }\\r\\n  &:disabled {\\r\\n    background-color: var(--grey100);\\r\\n  }\\r\\n  background: white\\r\\n    url(\\"data:image/svg+xml,<svg xmlns=\'http://www.w3.org/2000/svg\' fill=\'gray\' width=\'16\' height=\'16\' viewBox=\'0 0 16 16\'><path d=\'M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\' ></path></svg>\\")\\r\\n    no-repeat 8px center;\\r\\n}\\r\\n","styleUrl":"./ag-grid-toolbar-search.component.scss"}],"stylesData":"","extends":[],"accessors":{"context":{"name":"context","getSignature":{"name":"context","type":"","returnType":"AgGridContext","line":16}}},"templateData":"<input\\n  type=\\"search\\"\\n  [placeholder]=\\"placeholder\\"\\n  (keyup)=\\"onSearch($event)\\"\\n  (search)=\\"onSearch($event)\\"\\n/>\\n"},{"name":"ButtonComponent","id":"component-ButtonComponent-502c6abda417339da493e76cd3c2a684c773d3fc72909f801205fbff5530b3d366380f430857d0cdf5d633f8408ab2890bd97bda38dd5ff2b9aeddc5780cee29","file":"projects/expansion/ag-grid-angular/src/stories/button.component.ts","encapsulation":[],"entryComponents":[],"inputs":[],"outputs":[],"providers":[],"selector":"storybook-button","styleUrls":["./button.css"],"styles":[],"template":"<button   type=\\"button\\"\\n   (click)=\\"onClick.emit($event)\\"\\n   [ngClass]=\\"classes\\"\\n   [ngStyle]=\\"{ \'background-color\': backgroundColor }\\"\\n >\\n   {{ label }}\\n </button>","templateUrl":[],"viewProviders":[],"hostDirectives":[],"inputsClass":[{"name":"backgroundColor","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nWhat background color to use\\n","description":"<p>What background color to use</p>\\n","line":28,"type":"string","decorators":[]},{"name":"label","defaultValue":"\'Button\'","deprecated":false,"deprecationMessage":"","jsdoctags":[{"pos":824,"end":838,"flags":16842752,"modifierFlagsCache":0,"transformFlags":0,"kind":334,"tagName":{"pos":825,"end":833,"flags":16842752,"modifierFlagsCache":0,"transformFlags":0,"kind":80,"escapedText":"required"},"comment":""}],"rawdescription":"\\n\\nButton contents\\n\\n","description":"<p>Button contents</p>\\n","line":42,"type":"string","decorators":[]},{"name":"primary","defaultValue":"false","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nIs this the principal call to action on the page?\\n","description":"<p>Is this the principal call to action on the page?</p>\\n","line":22,"type":"boolean","decorators":[]},{"name":"size","defaultValue":"\'medium\'","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nHow large should the button be?\\n","description":"<p>How large should the button be?</p>\\n","line":34,"type":"\\"small\\" | \\"medium\\" | \\"large\\"","decorators":[]}],"outputsClass":[{"name":"onClick","defaultValue":"new EventEmitter<Event>()","deprecated":false,"deprecationMessage":"","rawdescription":"\\n\\nOptional click handler\\n","description":"<p>Optional click handler</p>\\n","line":48,"type":"EventEmitter"}],"propertiesClass":[],"methodsClass":[],"deprecated":false,"deprecationMessage":"","hostBindings":[],"hostListeners":[],"standalone":false,"imports":[{"name":"CommonModule","type":"module"}],"description":"","rawdescription":"\\n","type":"component","sourceCode":"import { CommonModule } from \'@angular/common\';\\r\\nimport { Component, Input, Output, EventEmitter } from \'@angular/core\';\\r\\n\\r\\n@Component({\\r\\n  selector: \'storybook-button\',\\r\\n  imports: [CommonModule],\\r\\n  template: ` <button\\r\\n    type=\\"button\\"\\r\\n    (click)=\\"onClick.emit($event)\\"\\r\\n    [ngClass]=\\"classes\\"\\r\\n    [ngStyle]=\\"{ \'background-color\': backgroundColor }\\"\\r\\n  >\\r\\n    {{ label }}\\r\\n  </button>`,\\r\\n  styleUrls: [\'./button.css\'],\\r\\n})\\r\\nexport default class ButtonComponent {\\r\\n  /**\\r\\n   * Is this the principal call to action on the page?\\r\\n   */\\r\\n  @Input()\\r\\n  primary = false;\\r\\n\\r\\n  /**\\r\\n   * What background color to use\\r\\n   */\\r\\n  @Input()\\r\\n  backgroundColor?: string;\\r\\n\\r\\n  /**\\r\\n   * How large should the button be?\\r\\n   */\\r\\n  @Input()\\r\\n  size: \'small\' | \'medium\' | \'large\' = \'medium\';\\r\\n\\r\\n  /**\\r\\n   * Button contents\\r\\n   *\\r\\n   * @required\\r\\n   */\\r\\n  @Input()\\r\\n  label = \'Button\';\\r\\n\\r\\n  /**\\r\\n   * Optional click handler\\r\\n   */\\r\\n  @Output()\\r\\n  onClick = new EventEmitter<Event>();\\r\\n\\r\\n  public get classes(): string[] {\\r\\n    const mode = this.primary ? \'storybook-button--primary\' : \'storybook-button--secondary\';\\r\\n\\r\\n    return [\'storybook-button\', `storybook-button--${this.size}`, mode];\\r\\n  }\\r\\n}\\r\\n","assetsDirs":[],"styleUrlsData":[{"data":".storybook-button {\\n  font-family: \'Nunito Sans\', \'Helvetica Neue\', Helvetica, Arial, sans-serif;\\n  font-weight: 700;\\n  border: 0;\\n  border-radius: 3em;\\n  cursor: pointer;\\n  display: inline-block;\\n  line-height: 1;\\n}\\n.storybook-button--primary {\\n  color: white;\\n  background-color: #1ea7fd;\\n}\\n.storybook-button--secondary {\\n  color: #333;\\n  background-color: transparent;\\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\\n}\\n.storybook-button--small {\\n  font-size: 12px;\\n  padding: 10px 16px;\\n}\\n.storybook-button--medium {\\n  font-size: 14px;\\n  padding: 11px 20px;\\n}\\n.storybook-button--large {\\n  font-size: 16px;\\n  padding: 12px 24px;\\n}\\n","styleUrl":"./button.css"}],"stylesData":"","extends":[],"accessors":{"classes":{"name":"classes","getSignature":{"name":"classes","type":"[]","returnType":"string[]","line":50}}}}],"modules":[{"name":"AgGridExpansionModule","id":"module-AgGridExpansionModule-9d672c3258b3b281cd2f862214030e440292ec9ac9270b57754dcfd3c555975c751766550f0fe79a599b7eca835cfe782e33f44f3867c1ca45fd66066a20b7db","description":"","deprecationMessage":"","deprecated":false,"file":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/ag-grid-expansion.module.ts","methods":[],"sourceCode":"import { NgModule } from \'@angular/core\';\\nimport { CommonModule } from \'@angular/common\';\\nimport { AgGridExtensionComponent } from \'./ag-grid-expansion.component\';\\nimport { AgGridToolbarComponent } from \'./components/ag-grid-toolbar/ag-grid-toolbar.component\';\\nimport { AgGridToolbarActionComponent } from \'./components/ag-grid-toolbar-action/ag-grid-toolbar-action.component\';\\nimport { AgGridToolbarSearchComponent } from \'./components/ag-grid-toolbar-search/ag-grid-toolbar-search.component\';\\n\\n@NgModule({\\n  declarations: [\\n    AgGridExtensionComponent,\\n    AgGridToolbarComponent,\\n    AgGridToolbarActionComponent,\\n    AgGridToolbarSearchComponent,\\n  ],\\n  exports: [\\n    AgGridExtensionComponent,\\n    AgGridToolbarComponent,\\n    AgGridToolbarActionComponent,\\n  ],\\n  imports: [CommonModule],\\n})\\nexport class AgGridExpansionModule {}\\n","children":[{"type":"providers","elements":[]},{"type":"declarations","elements":[{"name":"AgGridExtensionComponent"},{"name":"AgGridToolbarActionComponent"},{"name":"AgGridToolbarComponent"},{"name":"AgGridToolbarSearchComponent"}]},{"type":"imports","elements":[]},{"type":"exports","elements":[{"name":"AgGridExtensionComponent"},{"name":"AgGridToolbarActionComponent"},{"name":"AgGridToolbarComponent"}]},{"type":"bootstrap","elements":[]},{"type":"classes","elements":[]}]}],"miscellaneous":{"variables":[{"name":"actions","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"actionsSets.standard"},{"name":"actionsSets","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/actions-sets.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\r\\n  redoUndo: [presetActions.redo, presetActions.undo],\\r\\n  standard: [\\r\\n    presetActions.reset,\\r\\n    presetActions.fit,\\r\\n    presetActions.reload,\\r\\n    {},\\r\\n    presetActions.export,\\r\\n  ],\\r\\n  utility: [presetActions.reset, presetActions.fit, presetActions.reload],\\r\\n}"},{"name":"ContentProjections","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\r\\n  args: {\\r\\n    enableSearch: true,\\r\\n    debounceSearch: 500,\\r\\n    placeholderSearch: \'Search..\',\\r\\n  },\\r\\n  render: (args) => ({\\r\\n    props: {\\r\\n      ...args,\\r\\n      actions,\\r\\n      gridOptions,\\r\\n    },\\r\\n    template: `\\r\\n    <ag-grid-expansion\\r\\n      [actions]=\\"actions\\"\\r\\n      [enableSearch]=\\"enableSearch\\"\\r\\n      [debounceSearch]=\\"debounceSearch\\"\\r\\n      [placeholderSearch]=\\"placeholderSearch\\">\\r\\n      <div toolbarLeft>toolbarLeft</div>\\r\\n      <div toolbarCenter>toolbarCenter</div>\\r\\n      <div toolbarRight>toolbarRight</div>\\r\\n      <ag-grid-toolbar-action actionsLeft tooltip=\\"I\'m here because of *actionsLeft* content projection\\">arrow_left</ag-grid-toolbar-action>\\r\\n      <ag-grid-toolbar-action actionsRight tooltip=\\"I\'m here because of *actionsRight* content projection\\">arrow_right</ag-grid-toolbar-action>\\r\\n      <ag-grid-angular\\r\\n        class=\\"ag-theme-balham\\"\\r\\n        style=\\"width: 100%; height: 320px;\\"\\r\\n        [gridOptions]=\\"gridOptions\\">\\r\\n      </ag-grid-angular>\\r\\n    </ag-grid-expansion>\\r\\n    `,\\r\\n  }),\\r\\n}"},{"name":"gridOptions","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts","deprecated":false,"deprecationMessage":"","type":"AgGridOptions","defaultValue":"{\\r\\n  columnDefs: [{ field: \'make\' }, { field: \'model\' }, { field: \'price\' }],\\r\\n  enableRangeSelection: true,\\r\\n  rowData: [\\r\\n    { make: \'Toyota\', model: \'Celica\', price: 35000 },\\r\\n    { make: \'Ford\', model: \'Mondeo\', price: 32000 },\\r\\n    { make: \'Porsche\', model: \'Boxster\', price: 72000 },\\r\\n  ],\\r\\n  rowSelection: \'single\',\\r\\n}"},{"name":"Large","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    size: \'large\',\\n    label: \'Button\',\\n  },\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<AgGridExtensionComponent>","defaultValue":"{\\r\\n  component: AgGridExtensionComponent,\\r\\n  decorators: [\\r\\n    moduleMetadata({\\r\\n      imports: [AgGridModule, AgGridExpansionModule],\\r\\n    }),\\r\\n  ],\\r\\n  render: (args) => ({\\r\\n    props: {\\r\\n      ...args,\\r\\n      actions,\\r\\n      gridOptions,\\r\\n    },\\r\\n    template: `\\r\\n    <ag-grid-expansion\\r\\n      [actions]=\\"actions\\"\\r\\n      [enableSearch]=\\"enableSearch\\"\\r\\n      [debounceSearch]=\\"debounceSearch\\"\\r\\n      [placeholderSearch]=\\"placeholderSearch\\">\\r\\n      <ag-grid-angular\\r\\n        class=\\"ag-theme-balham\\"\\r\\n        style=\\"width: 100%; height: 320px;\\"\\r\\n        [gridOptions]=\\"gridOptions\\">\\r\\n      </ag-grid-angular>\\r\\n    </ag-grid-expansion>\\r\\n    `,\\r\\n  }),\\r\\n  tags: [\'autodocs\'],\\r\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<Button>","defaultValue":"{\\n  title: \'Example/Button\',\\n  component: Button,\\n  tags: [\'autodocs\'],\\n  render: (args: Button) => ({\\n    props: {\\n      backgroundColor: null,\\n      ...args,\\n    },\\n  }),\\n  argTypes: {\\n    backgroundColor: {\\n      control: \'color\',\\n    },\\n  },\\n}"},{"name":"presetActions","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/actions-sets.ts","deprecated":false,"deprecationMessage":"","type":"AgGridToolbarAction","defaultValue":"{\\r\\n  export: {\\r\\n    icon: \'file_download\',\\r\\n    tooltip: \'Export as csv\',\\r\\n    clickFn: ({ api }) => {\\r\\n      api.exportDataAsCsv();\\r\\n    },\\r\\n  },\\r\\n  fit: {\\r\\n    icon: \'view_column\',\\r\\n    tooltip: \'Fit columns\',\\r\\n    clickFn: ({ api }) => {\\r\\n      api.sizeColumnsToFit();\\r\\n    },\\r\\n  },\\r\\n  /** Requires `context.reloadData` arrow function for client-side */\\r\\n  reload: {\\r\\n    icon: \'refresh\',\\r\\n    tooltip: \'Reload data\',\\r\\n    clickFn: (params) => {\\r\\n      const { api, context } = params;\\r\\n      const rowModelType = api.getModel().getType();\\r\\n      if (rowModelType === \'clientSide\') {\\r\\n        if (context?.reloadData) {\\r\\n          context.reloadData(params);\\r\\n        } else {\\r\\n          console.warn(`${pkg.name}: \'context.reloadData()\' not defined`);\\r\\n        }\\r\\n      } else if (rowModelType === \'serverSide\') {\\r\\n        api.refreshServerSide({ route: [], purge: true });\\r\\n      }\\r\\n    },\\r\\n  },\\r\\n  redo: {\\r\\n    icon: \'redo\',\\r\\n    tooltip: \'Redo\',\\r\\n    clickFn: ({ columnApi }) => {\\r\\n      columnApi.resetColumnState();\\r\\n    },\\r\\n  },\\r\\n  reset: {\\r\\n    icon: \'restart_alt\',\\r\\n    tooltip: \'Reset columns\',\\r\\n    clickFn: ({ columnApi }) => {\\r\\n      columnApi.resetColumnState();\\r\\n    },\\r\\n  },\\r\\n  undo: {\\r\\n    icon: \'undo\',\\r\\n    tooltip: \'Undo\',\\r\\n    clickFn: ({ columnApi }) => {\\r\\n      columnApi.resetColumnState();\\r\\n    },\\r\\n  },\\r\\n}"},{"name":"preview","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/.storybook/preview.ts","deprecated":false,"deprecationMessage":"","type":"Preview","defaultValue":"{\\n  parameters: {\\n    actions: { argTypesRegex: \\"^on[A-Z].*\\" },\\n    controls: {\\n      matchers: {\\n        color: /(background|color)$/i,\\n        date: /Date$/i,\\n      },\\n    },\\n  },\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    primary: true,\\n    label: \'Button\',\\n  },\\n}"},{"name":"SeachAndActions","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\r\\n  args: {\\r\\n    enableSearch: true,\\r\\n    debounceSearch: 500,\\r\\n    placeholderSearch: \'Search..\',\\r\\n  },\\r\\n}"},{"name":"Secondary","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    label: \'Button\',\\n  },\\n}"},{"name":"Small","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    size: \'small\',\\n    label: \'Button\',\\n  },\\n}"},{"name":"timer","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts","deprecated":false,"deprecationMessage":"","type":"any"}],"functions":[],"typealiases":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<AgGridExtensionComponent>","file":"projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183},{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<Button>","file":"projects/expansion/ag-grid-angular/src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"enumerations":[],"groupedVariables":{"projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts":[{"name":"actions","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts","deprecated":false,"deprecationMessage":"","type":"","defaultValue":"actionsSets.standard"},{"name":"ContentProjections","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\r\\n  args: {\\r\\n    enableSearch: true,\\r\\n    debounceSearch: 500,\\r\\n    placeholderSearch: \'Search..\',\\r\\n  },\\r\\n  render: (args) => ({\\r\\n    props: {\\r\\n      ...args,\\r\\n      actions,\\r\\n      gridOptions,\\r\\n    },\\r\\n    template: `\\r\\n    <ag-grid-expansion\\r\\n      [actions]=\\"actions\\"\\r\\n      [enableSearch]=\\"enableSearch\\"\\r\\n      [debounceSearch]=\\"debounceSearch\\"\\r\\n      [placeholderSearch]=\\"placeholderSearch\\">\\r\\n      <div toolbarLeft>toolbarLeft</div>\\r\\n      <div toolbarCenter>toolbarCenter</div>\\r\\n      <div toolbarRight>toolbarRight</div>\\r\\n      <ag-grid-toolbar-action actionsLeft tooltip=\\"I\'m here because of *actionsLeft* content projection\\">arrow_left</ag-grid-toolbar-action>\\r\\n      <ag-grid-toolbar-action actionsRight tooltip=\\"I\'m here because of *actionsRight* content projection\\">arrow_right</ag-grid-toolbar-action>\\r\\n      <ag-grid-angular\\r\\n        class=\\"ag-theme-balham\\"\\r\\n        style=\\"width: 100%; height: 320px;\\"\\r\\n        [gridOptions]=\\"gridOptions\\">\\r\\n      </ag-grid-angular>\\r\\n    </ag-grid-expansion>\\r\\n    `,\\r\\n  }),\\r\\n}"},{"name":"gridOptions","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts","deprecated":false,"deprecationMessage":"","type":"AgGridOptions","defaultValue":"{\\r\\n  columnDefs: [{ field: \'make\' }, { field: \'model\' }, { field: \'price\' }],\\r\\n  enableRangeSelection: true,\\r\\n  rowData: [\\r\\n    { make: \'Toyota\', model: \'Celica\', price: 35000 },\\r\\n    { make: \'Ford\', model: \'Mondeo\', price: 32000 },\\r\\n    { make: \'Porsche\', model: \'Boxster\', price: 72000 },\\r\\n  ],\\r\\n  rowSelection: \'single\',\\r\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<AgGridExtensionComponent>","defaultValue":"{\\r\\n  component: AgGridExtensionComponent,\\r\\n  decorators: [\\r\\n    moduleMetadata({\\r\\n      imports: [AgGridModule, AgGridExpansionModule],\\r\\n    }),\\r\\n  ],\\r\\n  render: (args) => ({\\r\\n    props: {\\r\\n      ...args,\\r\\n      actions,\\r\\n      gridOptions,\\r\\n    },\\r\\n    template: `\\r\\n    <ag-grid-expansion\\r\\n      [actions]=\\"actions\\"\\r\\n      [enableSearch]=\\"enableSearch\\"\\r\\n      [debounceSearch]=\\"debounceSearch\\"\\r\\n      [placeholderSearch]=\\"placeholderSearch\\">\\r\\n      <ag-grid-angular\\r\\n        class=\\"ag-theme-balham\\"\\r\\n        style=\\"width: 100%; height: 320px;\\"\\r\\n        [gridOptions]=\\"gridOptions\\">\\r\\n      </ag-grid-angular>\\r\\n    </ag-grid-expansion>\\r\\n    `,\\r\\n  }),\\r\\n  tags: [\'autodocs\'],\\r\\n}"},{"name":"SeachAndActions","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\r\\n  args: {\\r\\n    enableSearch: true,\\r\\n    debounceSearch: 500,\\r\\n    placeholderSearch: \'Search..\',\\r\\n  },\\r\\n}"}],"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/actions-sets.ts":[{"name":"actionsSets","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/actions-sets.ts","deprecated":false,"deprecationMessage":"","type":"object","defaultValue":"{\\r\\n  redoUndo: [presetActions.redo, presetActions.undo],\\r\\n  standard: [\\r\\n    presetActions.reset,\\r\\n    presetActions.fit,\\r\\n    presetActions.reload,\\r\\n    {},\\r\\n    presetActions.export,\\r\\n  ],\\r\\n  utility: [presetActions.reset, presetActions.fit, presetActions.reload],\\r\\n}"},{"name":"presetActions","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/actions-sets.ts","deprecated":false,"deprecationMessage":"","type":"AgGridToolbarAction","defaultValue":"{\\r\\n  export: {\\r\\n    icon: \'file_download\',\\r\\n    tooltip: \'Export as csv\',\\r\\n    clickFn: ({ api }) => {\\r\\n      api.exportDataAsCsv();\\r\\n    },\\r\\n  },\\r\\n  fit: {\\r\\n    icon: \'view_column\',\\r\\n    tooltip: \'Fit columns\',\\r\\n    clickFn: ({ api }) => {\\r\\n      api.sizeColumnsToFit();\\r\\n    },\\r\\n  },\\r\\n  /** Requires `context.reloadData` arrow function for client-side */\\r\\n  reload: {\\r\\n    icon: \'refresh\',\\r\\n    tooltip: \'Reload data\',\\r\\n    clickFn: (params) => {\\r\\n      const { api, context } = params;\\r\\n      const rowModelType = api.getModel().getType();\\r\\n      if (rowModelType === \'clientSide\') {\\r\\n        if (context?.reloadData) {\\r\\n          context.reloadData(params);\\r\\n        } else {\\r\\n          console.warn(`${pkg.name}: \'context.reloadData()\' not defined`);\\r\\n        }\\r\\n      } else if (rowModelType === \'serverSide\') {\\r\\n        api.refreshServerSide({ route: [], purge: true });\\r\\n      }\\r\\n    },\\r\\n  },\\r\\n  redo: {\\r\\n    icon: \'redo\',\\r\\n    tooltip: \'Redo\',\\r\\n    clickFn: ({ columnApi }) => {\\r\\n      columnApi.resetColumnState();\\r\\n    },\\r\\n  },\\r\\n  reset: {\\r\\n    icon: \'restart_alt\',\\r\\n    tooltip: \'Reset columns\',\\r\\n    clickFn: ({ columnApi }) => {\\r\\n      columnApi.resetColumnState();\\r\\n    },\\r\\n  },\\r\\n  undo: {\\r\\n    icon: \'undo\',\\r\\n    tooltip: \'Undo\',\\r\\n    clickFn: ({ columnApi }) => {\\r\\n      columnApi.resetColumnState();\\r\\n    },\\r\\n  },\\r\\n}"}],"projects/expansion/ag-grid-angular/src/stories/Button.stories.ts":[{"name":"Large","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    size: \'large\',\\n    label: \'Button\',\\n  },\\n}"},{"name":"meta","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"Meta<Button>","defaultValue":"{\\n  title: \'Example/Button\',\\n  component: Button,\\n  tags: [\'autodocs\'],\\n  render: (args: Button) => ({\\n    props: {\\n      backgroundColor: null,\\n      ...args,\\n    },\\n  }),\\n  argTypes: {\\n    backgroundColor: {\\n      control: \'color\',\\n    },\\n  },\\n}"},{"name":"Primary","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    primary: true,\\n    label: \'Button\',\\n  },\\n}"},{"name":"Secondary","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    label: \'Button\',\\n  },\\n}"},{"name":"Small","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","type":"Story","defaultValue":"{\\n  args: {\\n    size: \'small\',\\n    label: \'Button\',\\n  },\\n}"}],"projects/expansion/ag-grid-angular/.storybook/preview.ts":[{"name":"preview","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/.storybook/preview.ts","deprecated":false,"deprecationMessage":"","type":"Preview","defaultValue":"{\\n  parameters: {\\n    actions: { argTypesRegex: \\"^on[A-Z].*\\" },\\n    controls: {\\n      matchers: {\\n        color: /(background|color)$/i,\\n        date: /Date$/i,\\n      },\\n    },\\n  },\\n}"}],"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts":[{"name":"timer","ctype":"miscellaneous","subtype":"variable","file":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts","deprecated":false,"deprecationMessage":"","type":"any"}]},"groupedFunctions":{},"groupedEnumerations":{},"groupedTypeAliases":{"projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<AgGridExtensionComponent>","file":"projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}],"projects/expansion/ag-grid-angular/src/stories/Button.stories.ts":[{"name":"Story","ctype":"miscellaneous","subtype":"typealias","rawtype":"StoryObj<Button>","file":"projects/expansion/ag-grid-angular/src/stories/Button.stories.ts","deprecated":false,"deprecationMessage":"","description":"","kind":183}]}},"routes":[],"coverage":{"count":18,"status":"low","files":[{"filePath":"projects/expansion/ag-grid-angular/.storybook/preview.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"preview","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/actions-sets.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"actionsSets","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/actions-sets.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"presetActions","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/ag-grid-expansion.component.ts","type":"component","linktype":"component","name":"AgGridExtensionComponent","coveragePercent":55,"coverageCount":"5/9","status":"good"},{"filePath":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar-action/ag-grid-toolbar-action.component.ts","type":"component","linktype":"component","name":"AgGridToolbarActionComponent","coveragePercent":33,"coverageCount":"2/6","status":"medium"},{"filePath":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts","type":"component","linktype":"component","name":"AgGridToolbarSearchComponent","coveragePercent":0,"coverageCount":"0/6","status":"low"},{"filePath":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"timer","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar/ag-grid-toolbar.component.ts","type":"component","linktype":"component","name":"AgGridToolbarComponent","coveragePercent":0,"coverageCount":"0/5","status":"low"},{"filePath":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-context.ts","type":"interface","linktype":"interface","name":"AgGridContext","coveragePercent":85,"coverageCount":"6/7","status":"very-good"},{"filePath":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-event.ts","type":"interface","linktype":"interface","name":"AgGridEvent","coveragePercent":0,"coverageCount":"0/4","status":"low"},{"filePath":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-filters.ts","type":"interface","linktype":"interface","name":"AgGridFilter","coveragePercent":50,"coverageCount":"5/10","status":"medium"},{"filePath":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-filters.ts","type":"interface","linktype":"interface","name":"AgGridFilters","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-options.ts","type":"interface","linktype":"interface","name":"AgGridOptions","coveragePercent":100,"coverageCount":"2/2","status":"very-good"},{"filePath":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-toolbar-action.ts","type":"interface","linktype":"interface","name":"AgGridToolbarAction","coveragePercent":85,"coverageCount":"6/7","status":"very-good"},{"filePath":"projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-toolbar-action.ts","type":"interface","linktype":"interface","name":"AgGridToolbarActionEvent","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/expansion/ag-grid-angular/src/stories/Button.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Large","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/expansion/ag-grid-angular/src/stories/Button.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/expansion/ag-grid-angular/src/stories/Button.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Primary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/expansion/ag-grid-angular/src/stories/Button.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Secondary","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/expansion/ag-grid-angular/src/stories/Button.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"Small","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"actions","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"ContentProjections","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"gridOptions","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"meta","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts","type":"variable","linktype":"miscellaneous","linksubtype":"variable","name":"SeachAndActions","coveragePercent":0,"coverageCount":"0/1","status":"low"},{"filePath":"projects/expansion/ag-grid-angular/src/stories/button.component.ts","type":"component","linktype":"component","name":"ButtonComponent","coveragePercent":83,"coverageCount":"5/6","status":"very-good"}]}}');(0,angular.P)(documentation_namespaceObject);const _storybook_preview={parameters:{actions:{argTypesRegex:"^on[A-Z].*"},controls:{matchers:{color:/(background|color)$/i,date:/Date$/i}}}}},"./storybook-config-entry.js":(__unused_webpack_module,__unused_webpack___webpack_exports__,__webpack_require__)=>{"use strict";var external_STORYBOOK_MODULE_GLOBAL_=__webpack_require__("@storybook/global"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("@storybook/preview-api"),external_STORYBOOK_MODULE_CHANNELS_=__webpack_require__("@storybook/channels"),asyncToGenerator=__webpack_require__("./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js");const pipeline=x=>x(),importers=[function(){var _ref=(0,asyncToGenerator.Z)((function*(path){if(!/^\.[\\/](?:projects[\\/]expansion[\\/]ag-grid-angular[\\/]src(?:[\\/](?!\.)(?:(?:(?!(?:^|[\\/])\.).)*?)[\\/]|[\\/]|$)(?!\.)(?=.)[^\\/]*?\.mdx)$/.exec(path))return;const pathRemainder=path.substring(41);return __webpack_require__("./projects/expansion/ag-grid-angular/src lazy recursive ^\\.\\/.*$ include: (?:[\\\\/]projects[\\\\/]expansion[\\\\/]ag-grid-angular[\\\\/]src(?:[\\\\/](?%21\\.)(?:(?:(?%21(?:^%7C[\\\\/])\\.).)*?)[\\\\/]%7C[\\\\/]%7C$)(?%21\\.)(?=.)[^\\\\/]*?\\.mdx)$")("./"+pathRemainder)}));return function(_x){return _ref.apply(this,arguments)}}(),function(){var _ref2=(0,asyncToGenerator.Z)((function*(path){if(!/^\.[\\/](?:projects[\\/]expansion[\\/]ag-grid-angular[\\/]src(?:[\\/](?!\.)(?:(?:(?!(?:^|[\\/])\.).)*?)[\\/]|[\\/]|$)(?!\.)(?=.)[^\\/]*?\.stories\.(js|jsx|mjs|ts|tsx))$/.exec(path))return;const pathRemainder=path.substring(41);return __webpack_require__("./projects/expansion/ag-grid-angular/src lazy recursive ^\\.\\/.*$ include: (?:[\\\\/]projects[\\\\/]expansion[\\\\/]ag-grid-angular[\\\\/]src(?:[\\\\/](?%21\\.)(?:(?:(?%21(?:^%7C[\\\\/])\\.).)*?)[\\\\/]%7C[\\\\/]%7C$)(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.(js%7Cjsx%7Cmjs%7Cts%7Ctsx))$")("./"+pathRemainder)}));return function(_x2){return _ref2.apply(this,arguments)}}()];function _importFn(){return(_importFn=(0,asyncToGenerator.Z)((function*(path){for(let i=0;i<importers.length;i++){const moduleExports=yield pipeline((()=>importers[i](path)));if(moduleExports)return moduleExports}}))).apply(this,arguments)}const channel=(0,external_STORYBOOK_MODULE_CHANNELS_.createBrowserChannel)({page:"preview"});external_STORYBOOK_MODULE_PREVIEW_API_.addons.setChannel(channel),"DEVELOPMENT"===external_STORYBOOK_MODULE_GLOBAL_.global.CONFIG_TYPE&&(window.__STORYBOOK_SERVER_CHANNEL__=channel);const preview=new external_STORYBOOK_MODULE_PREVIEW_API_.PreviewWeb;window.__STORYBOOK_PREVIEW__=preview,window.__STORYBOOK_STORY_STORE__=preview.storyStore,window.__STORYBOOK_ADDONS_CHANNEL__=channel,window.__STORYBOOK_CLIENT_API__=new external_STORYBOOK_MODULE_PREVIEW_API_.ClientApi({storyStore:preview.storyStore}),preview.initialize({importFn:function importFn(_x3){return _importFn.apply(this,arguments)},getProjectAnnotations:()=>(0,external_STORYBOOK_MODULE_PREVIEW_API_.composeConfigs)([__webpack_require__("./node_modules/@storybook/angular/dist/client/preview-prod.js"),__webpack_require__("./node_modules/@storybook/angular/dist/client/docs/config.js"),__webpack_require__("./node_modules/@storybook/angular/dist/client/config.js"),__webpack_require__("./node_modules/@storybook/addon-links/dist/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/docs/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/actions/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/backgrounds/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/measure/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/outline/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-essentials/dist/highlight/preview.mjs"),__webpack_require__("./node_modules/@storybook/addon-interactions/dist/preview.mjs"),__webpack_require__("./projects/expansion/ag-grid-angular/.storybook/preview.ts")])})},"./projects/expansion/ag-grid-angular/src lazy recursive ^\\.\\/.*$ include: (?:[\\\\/]projects[\\\\/]expansion[\\\\/]ag-grid-angular[\\\\/]src(?:[\\\\/](?%21\\.)(?:(?:(?%21(?:^%7C[\\\\/])\\.).)*?)[\\\\/]%7C[\\\\/]%7C$)(?%21\\.)(?=.)[^\\\\/]*?\\.mdx)$":module=>{function webpackEmptyAsyncContext(req){return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}))}webpackEmptyAsyncContext.keys=()=>[],webpackEmptyAsyncContext.resolve=webpackEmptyAsyncContext,webpackEmptyAsyncContext.id="./projects/expansion/ag-grid-angular/src lazy recursive ^\\.\\/.*$ include: (?:[\\\\/]projects[\\\\/]expansion[\\\\/]ag-grid-angular[\\\\/]src(?:[\\\\/](?%21\\.)(?:(?:(?%21(?:^%7C[\\\\/])\\.).)*?)[\\\\/]%7C[\\\\/]%7C$)(?%21\\.)(?=.)[^\\\\/]*?\\.mdx)$",module.exports=webpackEmptyAsyncContext},"./projects/expansion/ag-grid-angular/src lazy recursive ^\\.\\/.*$ include: (?:[\\\\/]projects[\\\\/]expansion[\\\\/]ag-grid-angular[\\\\/]src(?:[\\\\/](?%21\\.)(?:(?:(?%21(?:^%7C[\\\\/])\\.).)*?)[\\\\/]%7C[\\\\/]%7C$)(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.(js%7Cjsx%7Cmjs%7Cts%7Ctsx))$":(module,__unused_webpack_exports,__webpack_require__)=>{var map={"./stories/Button.stories":["./projects/expansion/ag-grid-angular/src/stories/Button.stories.ts",256],"./stories/Button.stories.ts":["./projects/expansion/ag-grid-angular/src/stories/Button.stories.ts",256],"./stories/ag-grid-expansion.stories":["./projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",885,356],"./stories/ag-grid-expansion.stories.ts":["./projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",885,356]};function webpackAsyncContext(req){if(!__webpack_require__.o(map,req))return Promise.resolve().then((()=>{var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}));var ids=map[req],id=ids[0];return Promise.all(ids.slice(1).map(__webpack_require__.e)).then((()=>__webpack_require__(id)))}webpackAsyncContext.keys=()=>Object.keys(map),webpackAsyncContext.id="./projects/expansion/ag-grid-angular/src lazy recursive ^\\.\\/.*$ include: (?:[\\\\/]projects[\\\\/]expansion[\\\\/]ag-grid-angular[\\\\/]src(?:[\\\\/](?%21\\.)(?:(?:(?%21(?:^%7C[\\\\/])\\.).)*?)[\\\\/]%7C[\\\\/]%7C$)(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.(js%7Cjsx%7Cmjs%7Cts%7Ctsx))$",module.exports=webpackAsyncContext},"@storybook/channels":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CHANNELS__},"@storybook/client-logger":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CLIENT_LOGGER__},"@storybook/core-events":module=>{"use strict";module.exports=__STORYBOOK_MODULE_CORE_EVENTS__},"@storybook/global":module=>{"use strict";module.exports=__STORYBOOK_MODULE_GLOBAL__},"@storybook/preview-api":module=>{"use strict";module.exports=__STORYBOOK_MODULE_PREVIEW_API__}},__webpack_require__=>{var __webpack_exec__=moduleId=>__webpack_require__(__webpack_require__.s=moduleId);__webpack_require__.O(0,[29],(()=>(__webpack_exec__("./storybook-config-entry.js"),__webpack_exec__("./node_modules/@angular/compiler/fesm2022/compiler.mjs"))));__webpack_require__.O()}]);