{
    "pipes": [],
    "interfaces": [
        {
            "name": "AgGridContext",
            "id": "interface-AgGridContext-4a3ea84ef8e4ec64bd39bbc6a10f547bfa4a52846780a7c683bc413387276756dbf714627775d0711d85e56d592d30fa4b20c56590859f3c4210068ef2c0bb99",
            "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-context.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AgGridToolbarAction } from './ag-grid-toolbar-action';\r\n\r\nexport interface AgGridContext {\r\n  actions?: AgGridToolbarAction[];\r\n  quickFilterText?: string;\r\n}\r\n",
            "properties": [
                {
                    "name": "actions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AgGridToolbarAction[]",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "quickFilterText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "AgGridToolbarAction",
            "id": "interface-AgGridToolbarAction-33b36929956f7e3448a999732e76fc50f21d7af967a6881b4d967a5f638b4473c78754abc9715cce91aaabeae7d9ed94a6ece8ce60686d9e781216e6492522a2",
            "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-toolbar-action.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AgGridEvent } from 'ag-grid-community';\r\n\r\nexport interface AgGridToolbarAction<TData = any, TContext = any> {\r\n  /** Action color */\r\n  color?: string;\r\n  /** Default: `false`. */\r\n  disabled?: boolean;\r\n  /** If no icon is provided, the `ToolbarAction` will be treated as a separator. */\r\n  icon?: string;\r\n  /** ID for toolbar action, used to set html id. */\r\n  id?: string;\r\n  /** tooltip translated text. */\r\n  tooltip?: string;\r\n  /** Arrow function to execute on click. */\r\n  clickFn?: (event: AgGridEvent<TData, TContext>) => void;\r\n}\r\n",
            "properties": [
                {
                    "name": "clickFn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "<p>Arrow function to execute on click.</p>\n",
                    "line": 15,
                    "rawdescription": "\nArrow function to execute on click."
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>Action color</p>\n",
                    "line": 5,
                    "rawdescription": "\nAction color"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "<p>Default: <code>false</code>.</p>\n",
                    "line": 7,
                    "rawdescription": "\nDefault: `false`."
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>If no icon is provided, the <code>ToolbarAction</code> will be treated as a separator.</p>\n",
                    "line": 9,
                    "rawdescription": "\nIf no icon is provided, the `ToolbarAction` will be treated as a separator."
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>ID for toolbar action, used to set html id.</p>\n",
                    "line": 11,
                    "rawdescription": "\nID for toolbar action, used to set html id."
                },
                {
                    "name": "tooltip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>tooltip translated text.</p>\n",
                    "line": 13,
                    "rawdescription": "\ntooltip translated text."
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [
        {
            "name": "DatasourceService",
            "id": "injectable-DatasourceService-53632ba25d4279c0ff59d2f31ef4cc280c044d52149c8be2774b11b8ace62e45fbcd6ca5f307b026c683f5844be5678e6abe4b86bc58559f0fda1b3f5a7817ce",
            "file": "projects/expansion/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "createFakeServer",
                    "args": [
                        {
                            "name": "dataCount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ getData: (request: IServerSideGetRowsRequest) => { success: boolean; rows: any; }; }",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "dataCount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createServerSideDatasource",
                    "args": [
                        {
                            "name": "dataCount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "100"
                        }
                    ],
                    "optional": false,
                    "returnType": "IServerSideDatasource",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dataCount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "100",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generateItems",
                    "args": [
                        {
                            "name": "dataCount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any[]",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dataCount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport {\r\n  IServerSideDatasource,\r\n  IServerSideGetRowsRequest,\r\n} from 'ag-grid-community';\r\n@Injectable({ providedIn: 'root' })\r\nexport class DatasourceService {\r\n  constructor() {}\r\n\r\n  createServerSideDatasource(dataCount = 100): IServerSideDatasource {\r\n    const server = this.createFakeServer(dataCount);\r\n    return {\r\n      getRows: (params) => {\r\n        console.log('[Datasource] - rows requested by grid: ', params.request);\r\n        // get data for request from our fake server\r\n        const response = server.getData(params.request);\r\n        // simulating real server call with a 500ms delay\r\n        setTimeout(function () {\r\n          if (response.success) {\r\n            // supply rows for requested block to grid\r\n            params.success({ rowData: response.rows });\r\n          } else {\r\n            params.fail();\r\n          }\r\n        }, 500);\r\n      },\r\n    };\r\n  }\r\n\r\n  generateItems(dataCount: number): any[] {\r\n    const items: any[] = [];\r\n    for (let i = 0; i <= dataCount; i++) {\r\n      const brand = generateRandomBrand();\r\n      items.push({\r\n        id: i,\r\n        brand: brand,\r\n        isNew: Math.random() > 0.5,\r\n        model: generateRandomModel(brand),\r\n        price: generateRandomPrice(),\r\n      });\r\n    }\r\n    return items;\r\n  }\r\n\r\n  private createFakeServer(dataCount: number) {\r\n    const items = this.generateItems(dataCount);\r\n    return {\r\n      getData: (request: IServerSideGetRowsRequest) => {\r\n        // in this simplified fake server all rows are contained in an array\r\n        const requestedRows = items.slice(request.startRow, request.endRow);\r\n        return {\r\n          success: true,\r\n          rows: requestedRows,\r\n        };\r\n      },\r\n    };\r\n  }\r\n}\r\n// Generate 97 more items with random data\r\nconst items = [];\r\nfor (let i = 0; i <= 100; i++) {\r\n  const brand = generateRandomBrand();\r\n  items.push({\r\n    id: i,\r\n    brand: brand,\r\n    isNew: Math.random() > 0.5,\r\n    model: generateRandomModel(brand),\r\n    price: generateRandomPrice(),\r\n  });\r\n}\r\n\r\n// Function to generate random make\r\nfunction generateRandomBrand() {\r\n  const brand = ['BMW', 'Honda', 'Tesla', 'Volkswagen'];\r\n  return brand[Math.floor(Math.random() * brand.length)];\r\n}\r\n\r\n// Function to generate random model\r\nfunction generateRandomModel(brand: string) {\r\n  const allModels: any = {\r\n    BMW: ['X1', 'X2', 'X3', 'X4', 'X5', 'X6', 'X7'],\r\n    Honda: ['Accord', 'Civic'],\r\n    Tesla: ['Model S', 'Model 3', 'Model X', 'Model Y', 'Cybertruck'],\r\n    Volkswagen: ['e-Up', 'Golf', 'Polo'],\r\n  };\r\n  const models = allModels[brand];\r\n  return models[Math.floor(Math.random() * models.length)];\r\n}\r\n\r\n// Function to generate random price\r\nfunction generateRandomPrice() {\r\n  const price = Math.floor(Math.random() * 50000) + 20000;\r\n  return Math.round(price / 100) * 100;\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "GridOptionsService",
            "id": "injectable-GridOptionsService-b1b63e57a12400a012082f5fce9b8b2a8911f70e550ef6b56fe5464601b02be4abc38d91861f734a447dcdda07d91e35079d0374f2a0d4833292340a86057764",
            "file": "projects/expansion/ag-grid-angular/src/stories/story-helpers/grid-options.service.ts",
            "properties": [
                {
                    "name": "clientSide",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "core",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "getColDefs",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "getDefaultColDef",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "serverSide",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ColDef, GridOptions } from 'ag-grid-community';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class GridOptionsService {\r\n  getDefaultColDef = (): ColDef => {\r\n    return { editable: true, sortable: true };\r\n  };\r\n\r\n  getColDefs = (): ColDef[] => [\r\n    { field: 'id', width: 50 },\r\n    { field: 'brand' },\r\n    { field: 'model' },\r\n    { field: 'price', width: 90 },\r\n    { field: 'isNew', width: 70 },\r\n  ];\r\n\r\n  core = (): GridOptions => {\r\n    return {\r\n      defaultColDef: this.getDefaultColDef(),\r\n      enableCellChangeFlash: true,\r\n      getRowId: (params) => {\r\n        return params.data['id'];\r\n      },\r\n      rowSelection: 'single',\r\n      undoRedoCellEditing: true,\r\n    };\r\n  };\r\n\r\n  clientSide = (): GridOptions => {\r\n    return {\r\n      ...this.core(),\r\n      rowModelType: 'clientSide',\r\n    };\r\n  };\r\n\r\n  serverSide = (): GridOptions => {\r\n    return {\r\n      ...this.core(),\r\n      rowModelType: 'serverSide',\r\n    };\r\n  };\r\n}\r\n",
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AgGridExtensionComponent",
            "id": "component-AgGridExtensionComponent-a2241468ef59092840dd2e4a17fb7a18033bdbd6affa677b2df2861351d676f92900ed086937665fd836822714702ed52142786740e71719a8f91b1ed08eaf99",
            "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/ag-grid-expansion.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ag-grid-expansion",
            "styleUrls": [
                "./ag-grid-expansion.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ag-grid-expansion.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "actions",
                    "defaultValue": "actionsSets.standard",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nToolbar actions",
                    "description": "<p>Toolbar actions</p>\n",
                    "line": 104,
                    "type": "AgGridToolbarAction[]",
                    "decorators": []
                },
                {
                    "name": "debounceSearch",
                    "defaultValue": "500",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nDebounce in ms for seach input",
                    "description": "<p>Debounce in ms for seach input</p>\n",
                    "line": 106,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "disableSearch",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nDisable search field",
                    "description": "<p>Disable search field</p>\n",
                    "line": 108,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "enableSearch",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nEnable search field",
                    "description": "<p>Enable search field</p>\n",
                    "line": 110,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "placeholderSearch",
                    "defaultValue": "'Search...'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSeach placeholdet text",
                    "description": "<p>Seach placeholdet text</p>\n",
                    "line": 112,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "agGrid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AgGridAngular",
                    "optional": false,
                    "description": "",
                    "line": 114,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "AgGridAngular"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 127,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Expands ag-grid with a toolbar, search and actions.</p>\n<h3>Prerequisites</h3>\n<ul>\n<li><a href=\"https://www.ag-grid.com/angular-data-grid/getting-started/\">Ag Grid Angular</a></li>\n<li><a href=\"https://fonts.google.com/icons?icon.set=Material+Icons&icon.style=Outlined\">Material Icons font</a><ul>\n<li><a href=\"https://developers.google.com/fonts/docs/material_icons#icon_font_for_the_web\">Setup font</a>: add in <code>index.html</code> or similar</li>\n</ul>\n</li>\n</ul>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;html&gt;\n  &lt;head&gt;\n    &lt;link href=&quot;https://fonts.googleapis.com/icon?family=Material+Icons+Outlined&quot; rel=&quot;stylesheet&quot; /&gt;</code></pre></div><h2>Features:</h2>\n<ul>\n<li>Quick search</li>\n<li>Toolbar actions</li>\n<li>Content projections<ul>\n<li>Multi-slot<ul>\n<li><code>toolbarLeft</code> =&gt; Toolbar left</li>\n<li><code>toolbarCenter</code> =&gt; Toolbar center</li>\n<li><code>toolbarRight</code> =&gt; Toolbar right</li>\n<li><code>actionsLeft</code> =&gt; pre actions</li>\n<li><code>actionsRight</code> =&gt; post actions</li>\n</ul>\n</li>\n<li>Single-slot</li>\n</ul>\n</li>\n<li>Adapts to ag-grid themes</li>\n</ul>\n<h2>Component overview</h2>\n<p><strong>Class:</strong> <code>AgGridExtensionComponent</code></p>\n<p><strong>Constants:</strong></p>\n<ul>\n<li><code>actionsSets: AgGridToolbarAction[]</code> =&gt; Predefined sets of actions</li>\n<li><code>presetActions: AgGridToolbarAction</code> =&gt; Predefined single actions. Fit columns, reset columns, cvs export etc</li>\n</ul>\n<p><strong>Interfaces:</strong></p>\n<ul>\n<li><code>AgGridContext</code> =&gt; Properties this component adds to <code>gridOptions.context</code></li>\n<li><code>AgGridToolbarAction</code> =&gt; Properties for a toolbar action</li>\n</ul>\n<p><strong>Module:</strong> <code>import { AgGridExpansionModule } from &#39;@expansion/ag-grid-angular&#39;;</code></p>\n<p><strong>Selector:</strong> <code>ag-grid-expansion</code></p>\n<h3>Global search</h3>\n<h4>Client side</h4>\n<p>Works out of the box for client side grids.</p>\n<h4>Other row models</h4>\n<p>Use <code>context.quickFilterText</code> in custom datasource implementation <code>IServerSideDatasource</code> like below.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-ts\">  // server-side example\n  export class ExampleDatasource implements IServerSideDatasource {\n      getRows(params: IServerSideGetRowsParams): void {\n        const { quickFilterText } = params.context as AgGridToolbarContext;\n        // Then use `quickFilterText` in backend call etc..\n      }\n  }</code></pre></div><h3>Code example</h3>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-ts\">&#64;Component({\n  standalone: true,\n  selector: &#39;app-demo-grid&#39;,\n  imports: [AgGridExpansionModule],\n  template: `\n    &lt;ag-grid-expansion class=&quot;ag-theme-balham&quot; [actions]=&quot;actions&quot;&gt;\n      &lt;ag-grid-angular [gridOptions]=&quot;gridOptions&quot;&gt;&lt;/ag-grid-angular&gt;\n    &lt;/ag-grid-expansion&gt;\n  `,\n})\nexport class DemoGridComponent {\n  actions: AgGridToolbarAction[];\n  gridOptions: GridOptions;\n}</code></pre></div>",
            "rawdescription": "\n\nExpands ag-grid with a toolbar, search and actions.\n\n### Prerequisites\n\n- [Ag Grid Angular](https://www.ag-grid.com/angular-data-grid/getting-started/)\n- [Material Icons font](https://fonts.google.com/icons?icon.set=Material+Icons&icon.style=Outlined)\n  - [Setup font](https://developers.google.com/fonts/docs/material_icons#icon_font_for_the_web): add in `index.html` or similar\n\n```html\n<html>\n  <head>\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons+Outlined\" rel=\"stylesheet\" />\n```\n\n## Features:\n- Quick search\n- Toolbar actions\n- Content projections\n  - Multi-slot\n    - `toolbarLeft` => Toolbar left\n    - `toolbarCenter` => Toolbar center\n    - `toolbarRight` => Toolbar right\n    - `actionsLeft` => pre actions\n    - `actionsRight` => post actions\n  - Single-slot\n- Adapts to ag-grid themes\n\n## Component overview\n\n**Class:** `AgGridExtensionComponent`\n\n**Constants:**\n- `actionsSets: AgGridToolbarAction[]` => Predefined sets of actions\n- `presetActions: AgGridToolbarAction` => Predefined single actions. Fit columns, reset columns, cvs export etc\n\n**Interfaces:**\n- `AgGridContext` => Properties this component adds to `gridOptions.context`\n- `AgGridToolbarAction` => Properties for a toolbar action\n\n**Module:** `import { AgGridExpansionModule } from '@expansion/ag-grid-angular';`\n\n**Selector:** `ag-grid-expansion`\n\n### Global search\n\n#### Client side\n\nWorks out of the box for client side grids.\n\n#### Other row models\n\nUse `context.quickFilterText` in custom datasource implementation `IServerSideDatasource` like below.\n\n```ts\n  // server-side example\n  export class ExampleDatasource implements IServerSideDatasource {\n      getRows(params: IServerSideGetRowsParams): void {\n        const { quickFilterText } = params.context as AgGridToolbarContext;\n        // Then use `quickFilterText` in backend call etc..\n      }\n  }\n```\n\n### Code example\n\n```ts\n@Component({\n  standalone: true,\n  selector: 'app-demo-grid',\n  imports: [AgGridExpansionModule],\n  template: `\n    <ag-grid-expansion class=\"ag-theme-balham\" [actions]=\"actions\">\n      <ag-grid-angular [gridOptions]=\"gridOptions\"></ag-grid-angular>\n    </ag-grid-expansion>\n  `,\n})\nexport class DemoGridComponent {\n  actions: AgGridToolbarAction[];\n  gridOptions: GridOptions;\n}\n```\n",
            "type": "component",
            "sourceCode": "import {\r\n  AfterViewInit,\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  Input,\r\n} from '@angular/core';\r\nimport { AgGridAngular } from 'ag-grid-angular';\r\nimport { AgGridToolbarAction } from './interfaces/ag-grid-toolbar-action';\r\nimport { actionsSets } from './actions-sets';\r\nimport { AgGridEvent } from 'ag-grid-community';\r\n\r\n/**\r\n * Expands ag-grid with a toolbar, search and actions.\r\n *\r\n * ### Prerequisites\r\n *\r\n * - [Ag Grid Angular](https://www.ag-grid.com/angular-data-grid/getting-started/)\r\n * - [Material Icons font](https://fonts.google.com/icons?icon.set=Material+Icons&icon.style=Outlined)\r\n *   - [Setup font](https://developers.google.com/fonts/docs/material_icons#icon_font_for_the_web): add in `index.html` or similar\r\n *\r\n * ```html\r\n * <html>\r\n *   <head>\r\n *     <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons+Outlined\" rel=\"stylesheet\" />\r\n * ```\r\n *\r\n * ## Features:\r\n * - Quick search\r\n * - Toolbar actions\r\n * - Content projections\r\n *   - Multi-slot\r\n *     - `toolbarLeft` => Toolbar left\r\n *     - `toolbarCenter` => Toolbar center\r\n *     - `toolbarRight` => Toolbar right\r\n *     - `actionsLeft` => pre actions\r\n *     - `actionsRight` => post actions\r\n *   - Single-slot\r\n * - Adapts to ag-grid themes\r\n *\r\n * ## Component overview\r\n *\r\n * **Class:** `AgGridExtensionComponent`\r\n *\r\n * **Constants:**\r\n * - `actionsSets: AgGridToolbarAction[]` => Predefined sets of actions\r\n * - `presetActions: AgGridToolbarAction` => Predefined single actions. Fit columns, reset columns, cvs export etc\r\n *\r\n * **Interfaces:**\r\n * - `AgGridContext` => Properties this component adds to `gridOptions.context`\r\n * - `AgGridToolbarAction` => Properties for a toolbar action\r\n *\r\n * **Module:** `import { AgGridExpansionModule } from '@expansion/ag-grid-angular';`\r\n *\r\n * **Selector:** `ag-grid-expansion`\r\n *\r\n * ### Global search\r\n *\r\n * #### Client side\r\n *\r\n * Works out of the box for client side grids.\r\n *\r\n * #### Other row models\r\n *\r\n * Use `context.quickFilterText` in custom datasource implementation `IServerSideDatasource` like below.\r\n *\r\n * ```ts\r\n *   // server-side example\r\n *   export class ExampleDatasource implements IServerSideDatasource {\r\n *       getRows(params: IServerSideGetRowsParams): void {\r\n *         const { quickFilterText } = params.context as AgGridToolbarContext;\r\n *         // Then use `quickFilterText` in backend call etc..\r\n *       }\r\n *   }\r\n * ```\r\n *\r\n * ### Code example\r\n *\r\n * ```ts\r\n * @Component({\r\n *   standalone: true,\r\n *   selector: 'app-demo-grid',\r\n *   imports: [AgGridExpansionModule],\r\n *   template: `\r\n *     <ag-grid-expansion class=\"ag-theme-balham\" [actions]=\"actions\">\r\n *       <ag-grid-angular [gridOptions]=\"gridOptions\"></ag-grid-angular>\r\n *     </ag-grid-expansion>\r\n *   `,\r\n * })\r\n * export class DemoGridComponent {\r\n *   actions: AgGridToolbarAction[];\r\n *   gridOptions: GridOptions;\r\n * }\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'ag-grid-expansion',\r\n  templateUrl: './ag-grid-expansion.component.html',\r\n  styleUrls: ['./ag-grid-expansion.component.scss'],\r\n  host: { class: 'ag-theme-expansion' },\r\n})\r\nexport class AgGridExtensionComponent implements AfterViewInit {\r\n  /** Toolbar actions */\r\n  @Input() actions: AgGridToolbarAction[] = actionsSets.standard;\r\n  /** Debounce in ms for seach input */\r\n  @Input() debounceSearch = 500;\r\n  /** Disable search field*/\r\n  @Input() disableSearch = false;\r\n  /** Enable search field*/\r\n  @Input() enableSearch = true;\r\n  /** Seach placeholdet text */\r\n  @Input() placeholderSearch = 'Search...';\r\n\r\n  @ContentChild(AgGridAngular) agGrid!: AgGridAngular;\r\n\r\n  constructor(private cdr: ChangeDetectorRef) {}\r\n\r\n  get context(): any {\r\n    return this.agGrid.context || this.agGrid.gridOptions?.context;\r\n  }\r\n\r\n  get toolbarActionEvent(): AgGridEvent {\r\n    const context = this.agGrid.context || this.agGrid.gridOptions?.context;\r\n    return { api: this.agGrid.api, context } as AgGridEvent;\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (!this.context) {\r\n      const context = { actions: this.actions };\r\n      this.agGrid.api.setGridOption('context', context);\r\n    } else {\r\n      this.context.actions = this.actions;\r\n    }\r\n    // agGrid changes after initializing itself\r\n    this.cdr.detectChanges();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: flex;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  ::ng-deep ag-grid-angular {\r\n    height: 100%;\r\n  }\r\n  ::ng-deep .ag-overlay {\r\n    height: calc(100% - 62px);\r\n    margin-top: 70px;\r\n  }\r\n  ::ng-deep .ag-root-wrapper {\r\n    border-top-left-radius: 0px;\r\n    border-top-right-radius: 0px;\r\n  }\r\n}\r\n\r\n::ng-deep .toolbar-action-separator {\r\n  border-right: 1px solid var(--ag-border-color);\r\n  height: 22px;\r\n}\r\n",
                    "styleUrl": "./ag-grid-expansion.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 114,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "AfterViewInit"
            ],
            "accessors": {
                "context": {
                    "name": "context",
                    "getSignature": {
                        "name": "context",
                        "type": "any",
                        "returnType": "any",
                        "line": 118
                    }
                },
                "toolbarActionEvent": {
                    "name": "toolbarActionEvent",
                    "getSignature": {
                        "name": "toolbarActionEvent",
                        "type": "",
                        "returnType": "AgGridEvent",
                        "line": 122
                    }
                }
            },
            "templateData": "<ag-grid-toolbar\r\n  [agGrid]=\"agGrid\"\r\n  [debounceSearch]=\"debounceSearch\"\r\n  [disableSearch]=\"disableSearch\"\r\n  [enableSearch]=\"enableSearch\"\r\n  [placeholderSearch]=\"placeholderSearch\"\r\n>\r\n  <ng-content select=\"[toolbarLeft]\" toolbarLeft></ng-content>\r\n  <ng-content select=\"[toolbarCenter]\" toolbarCenter></ng-content>\r\n  <ng-content select=\"[toolbarRight]\" toolbarRight></ng-content>\r\n  <!-- Actions -->\r\n  <ng-content select=\"[actionsLeft]\" toolbarRight></ng-content>\r\n  <ng-container *ngFor=\"let action of actions\" toolbarRight>\r\n    <ng-container *ngIf=\"!action?.icon\">\r\n      <span class=\"toolbar-action-separator\"></span>\r\n    </ng-container>\r\n\r\n    <ag-grid-toolbar-action\r\n      *ngIf=\"action?.icon\"\r\n      [color]=\"action?.color\"\r\n      [disabled]=\"action?.disabled || false\"\r\n      [icon]=\"action.icon\"\r\n      [id]=\"action.id\"\r\n      [tooltip]=\"action.tooltip || ''\"\r\n      (click)=\"action?.clickFn?.(toolbarActionEvent)\"\r\n    ></ag-grid-toolbar-action>\r\n  </ng-container>\r\n  <ng-content select=\"[actionsRight]\" toolbarRight></ng-content>\r\n  <!-- Actions END -->\r\n</ag-grid-toolbar>\r\n<ng-content>\r\n  <!-- ag-grid-angular -->\r\n</ng-content>\r\n"
        },
        {
            "name": "AgGridToolbarActionComponent",
            "id": "component-AgGridToolbarActionComponent-844cc1c6d43b6656a673a98f7fe32b3fc94f734e1719988845c5ef7fc15d466e60318f86486ccc20065002e28e875ce274887337c5661046072eafe811f35598",
            "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar-action/ag-grid-toolbar-action.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ag-grid-toolbar-action",
            "styleUrls": [
                "./ag-grid-toolbar-action.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ag-grid-toolbar-action.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nIcon name. Example `home`\n- Material icons: https://fonts.google.com/icons\n\n### Requirements\n```html\nAdd this to your html:\n<html>\n  <head>\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons+Outlined\" rel=\"stylesheet\" />\n  </head>\n<html>\n```\n",
                    "description": "<p>Icon name. Example <code>home</code></p>\n<ul>\n<li>Material icons: <a href=\"https://fonts.google.com/icons\">https://fonts.google.com/icons</a></li>\n</ul>\n<h3>Requirements</h3>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">Add this to your html:\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;link href=&quot;https://fonts.googleapis.com/icon?family=Material+Icons+Outlined&quot; rel=&quot;stylesheet&quot; /&gt;\n  &lt;/head&gt;\n&lt;html&gt;</code></pre></div>",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nID for toolbar action, used to set html id",
                    "description": "<p>ID for toolbar action, used to set html id</p>\n",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ag-grid-toolbar-action',\r\n  templateUrl: './ag-grid-toolbar-action.component.html',\r\n  styleUrls: ['./ag-grid-toolbar-action.component.scss'],\r\n})\r\nexport class AgGridToolbarActionComponent {\r\n  @Input() color?: string;\r\n  @Input() disabled?: boolean;\r\n  /** ID for toolbar action, used to set html id */\r\n  @Input() id?: string;\r\n  /** Icon name. Example `home`\r\n   * - Material icons: https://fonts.google.com/icons\r\n   *\r\n   * ### Requirements\r\n   * ```html\r\n   * Add this to your html:\r\n   * <html>\r\n   *   <head>\r\n   *     <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons+Outlined\" rel=\"stylesheet\" />\r\n   *   </head>\r\n   * <html>\r\n   * ```\r\n   */\r\n  @Input() icon?: string;\r\n  @Input() tooltip?: string;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  // Prevent click event on \"host\" when .disabled\r\n  display: contents;\r\n}\r\n\r\n.toolbar-action {\r\n  color: var(--ag-secondary-foreground-color);\r\n  font-size: 24px;\r\n  padding: 8px;\r\n  user-select: none;\r\n  &.disabled {\r\n    pointer-events: none;\r\n    color: var(\r\n      --ag-disabled-foreground-color,\r\n      --ag-input-disabled-border-color\r\n    );\r\n  }\r\n  &:hover {\r\n    cursor: pointer;\r\n    border-radius: 3px;\r\n    background: var(--ag-input-disabled-border-color);\r\n  }\r\n  &:active {\r\n    background: var(--ag-border-color);\r\n  }\r\n}\r\n",
                    "styleUrl": "./ag-grid-toolbar-action.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<span\r\n  class=\"toolbar-action material-icons-outlined\"\r\n  [class.disabled]=\"disabled\"\r\n  [id]=\"id\"\r\n  [style.color]=\"color\"\r\n  [title]=\"tooltip\"\r\n>\r\n  {{ icon }}<ng-content></ng-content>\r\n</span>\r\n"
        },
        {
            "name": "AgGridToolbarComponent",
            "id": "component-AgGridToolbarComponent-0527e6755637111cba815a1beeed61060471c766d3c4f0477d1ea31c79be80688eb3cd804a05b688f3b049b8c71c95cda40ba4d96bea61a956329f3e9097e550",
            "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar/ag-grid-toolbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ag-grid-toolbar",
            "styleUrls": [
                "./ag-grid-toolbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ag-grid-toolbar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "agGrid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "AgGridAngular",
                    "decorators": []
                },
                {
                    "name": "debounceSearch",
                    "defaultValue": "500",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "disableSearch",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "enableSearch",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "placeholderSearch",
                    "defaultValue": "'Search...'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { AgGridAngular } from 'ag-grid-angular';\r\n\r\n@Component({\r\n  selector: 'ag-grid-toolbar',\r\n  templateUrl: './ag-grid-toolbar.component.html',\r\n  styleUrls: ['./ag-grid-toolbar.component.scss'],\r\n})\r\nexport class AgGridToolbarComponent {\r\n  @Input() agGrid!: AgGridAngular;\r\n  @Input() debounceSearch = 500;\r\n  @Input() disableSearch = false;\r\n  @Input() enableSearch = true;\r\n  @Input() placeholderSearch = 'Search...';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".ag-grid-toolbar {\r\n  align-items: center;\r\n  background: var(--ag-header-background-color);\r\n  border: var(--ag-borders) var(--ag-border-color);\r\n  border-top-left-radius: var(--ag-wrapper-border-radius);\r\n  border-top-right-radius: var(--ag-wrapper-border-radius);\r\n  border-bottom: none;\r\n  display: flex;\r\n  height: 48px;\r\n  overflow-x: auto;\r\n  padding: 0px 8px;\r\n}\r\n.ag-grid-toolbar-content {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-left: 8px;\r\n\r\n  &-left {\r\n    align-items: center;\r\n    display: flex;\r\n    gap: 8px;\r\n  }\r\n  &-center {\r\n    align-items: center;\r\n    display: flex;\r\n    gap: 8px;\r\n  }\r\n  &-right {\r\n    align-items: center;\r\n    display: flex;\r\n  }\r\n}\r\n",
                    "styleUrl": "./ag-grid-toolbar.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"ag-grid-toolbar\">\r\n  <ag-grid-toolbar-search\r\n    *ngIf=\"enableSearch\"\r\n    [agGrid]=\"agGrid\"\r\n    [debounceTime]=\"debounceSearch\"\r\n    [disabled]=\"disableSearch\"\r\n    [placeholder]=\"placeholderSearch\"\r\n  ></ag-grid-toolbar-search>\r\n  <div class=\"ag-grid-toolbar-content\">\r\n    <div class=\"ag-grid-toolbar-content-left\">\r\n      <ng-content select=\"[toolbarLeft]\"></ng-content>\r\n    </div>\r\n    <div class=\"ag-grid-toolbar-content-center\">\r\n      <ng-content select=\"[toolbarCenter]\"></ng-content>\r\n    </div>\r\n    <div class=\"ag-grid-toolbar-content-right\">\r\n      <ng-content select=\"[toolbarRight]\"></ng-content>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "AgGridToolbarSearchComponent",
            "id": "component-AgGridToolbarSearchComponent-ed329d2f288330f0f0e2c3c21fec079683f3ccee05bab6da0bdaf4944e6efbbbca3589afc99ed88600a0a35c2266ad64f773b586336de9d74f21c804b9e1d267",
            "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ag-grid-toolbar-search",
            "styleUrls": [
                "./ag-grid-toolbar-search.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ag-grid-toolbar-search.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "agGrid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "AgGridAngular",
                    "decorators": []
                },
                {
                    "name": "debounceTime",
                    "defaultValue": "500",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'Search...'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onSearch",
                    "args": [
                        {
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setQuickFilter",
                    "args": [
                        {
                            "name": "term",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "term",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { AgGridAngular } from 'ag-grid-angular';\r\n\r\nlet timer: any;\r\n@Component({\r\n  selector: 'ag-grid-toolbar-search',\r\n  templateUrl: './ag-grid-toolbar-search.component.html',\r\n  styleUrls: ['./ag-grid-toolbar-search.component.scss'],\r\n})\r\nexport class AgGridToolbarSearchComponent {\r\n  @Input() agGrid!: AgGridAngular;\r\n  @Input() debounceTime = 500;\r\n  @Input() disabled = false;\r\n  @Input() placeholder = 'Search...';\r\n\r\n  get context(): { quickFilterText: string } {\r\n    return this.agGrid.context || this.agGrid.gridOptions?.context;\r\n  }\r\n\r\n  onSearch({ target }: any) {\r\n    const { api } = this.agGrid;\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => {\r\n      const type = api.getModel().getType();\r\n      if (type === 'serverSide') {\r\n        this.setQuickFilter(target.value);\r\n        api.onFilterChanged();\r\n      } else {\r\n        api.setQuickFilter(target.value);\r\n        this.setQuickFilter(target.value);\r\n      }\r\n      if (\r\n        this.agGrid.gridOptions?.rowSelection !== 'multiple' &&\r\n        this.agGrid.rowSelection !== 'multiple'\r\n      ) {\r\n        api.deselectAll();\r\n      }\r\n    }, this.debounceTime);\r\n  }\r\n\r\n  setQuickFilter(term: string) {\r\n    if (this.context) {\r\n      this.context.quickFilterText = term;\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "input {\r\n  border: 1px solid var(--ag-border-color);\r\n  border-radius: 4px;\r\n  height: 30px;\r\n  padding: 0px 8px 0px 28px;\r\n  &:hover:not(:disabled) {\r\n    border-color: var(--ag-range-selection-border-color);\r\n  }\r\n  &:focus-visible {\r\n    outline: none;\r\n    border-color: var(--ag-range-selection-border-color);\r\n  }\r\n  &:disabled {\r\n    background-color: var(--ag-input-disabled-background-color);\r\n  }\r\n  background: white\r\n    url(\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' fill='gray' width='16' height='16' viewBox='0 0 16 16'><path d='M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z' ></path></svg>\")\r\n    no-repeat 8px center;\r\n}\r\n",
                    "styleUrl": "./ag-grid-toolbar-search.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "context": {
                    "name": "context",
                    "getSignature": {
                        "name": "context",
                        "type": "literal type",
                        "returnType": "literal type",
                        "line": 16
                    }
                }
            },
            "templateData": "<input\r\n  type=\"search\"\r\n  [disabled]=\"disabled\"\r\n  [placeholder]=\"placeholder\"\r\n  (keyup)=\"onSearch($event)\"\r\n  (search)=\"onSearch($event)\"\r\n/>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AgGridExpansionModule",
            "id": "module-AgGridExpansionModule-dcddcc8ac43ac336556725acfb5994379f77ea2ada6de3f92df476b48037e2400f2ac7ab2c217cf1c4fd977837c931cdac34f8b43d17683ab686466fabf9ab2d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/ag-grid-expansion.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AgGridExtensionComponent } from './ag-grid-expansion.component';\r\nimport { AgGridToolbarComponent } from './components/ag-grid-toolbar/ag-grid-toolbar.component';\r\nimport { AgGridToolbarActionComponent } from './components/ag-grid-toolbar-action/ag-grid-toolbar-action.component';\r\nimport { AgGridToolbarSearchComponent } from './components/ag-grid-toolbar-search/ag-grid-toolbar-search.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AgGridExtensionComponent,\r\n    AgGridToolbarComponent,\r\n    AgGridToolbarActionComponent,\r\n    AgGridToolbarSearchComponent,\r\n  ],\r\n  exports: [AgGridExtensionComponent, AgGridToolbarActionComponent],\r\n  imports: [CommonModule],\r\n})\r\nexport class AgGridExpansionModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AgGridExtensionComponent"
                        },
                        {
                            "name": "AgGridToolbarActionComponent"
                        },
                        {
                            "name": "AgGridToolbarComponent"
                        },
                        {
                            "name": "AgGridToolbarSearchComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AgGridExtensionComponent"
                        },
                        {
                            "name": "AgGridToolbarActionComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AgGridToolbarAction[]",
                "defaultValue": "[\r\n  {\r\n    clickFn: ({ api }) => {\r\n      api.applyTransaction({ add: [{}] });\r\n    },\r\n    icon: 'add',\r\n    tooltip: 'Add new row',\r\n  },\r\n  {\r\n    clickFn: ({ api }) => {\r\n      const rows = api.getSelectedRows();\r\n      api.applyTransaction({ remove: rows });\r\n    },\r\n    disabled: true,\r\n    icon: 'delete',\r\n    tooltip: 'Delete selected row(s)',\r\n  },\r\n  {},\r\n  ...actionsSets.redoUndo,\r\n  {},\r\n  ...actionsSets.standard,\r\n]"
            },
            {
                "name": "actionsSets",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/actions-sets.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  redoUndo: [presetActions.redo, presetActions.undo],\r\n  standard: [presetActions.reset, presetActions.fit, presetActions.export],\r\n}"
            },
            {
                "name": "ContentProjections",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    actions: actions,\r\n    debounceSearch: 500,\r\n    disableSearch: false,\r\n    enableSearch: true,\r\n    placeholderSearch: 'Search..',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      actions,\r\n      gridOptions,\r\n    },\r\n    template: `\r\n    <ag-grid-expansion\r\n      [class]=\"agTheme\"\r\n      [actions]=\"actions\"\r\n      [disableSearch]=\"disableSearch\"\r\n      [debounceSearch]=\"debounceSearch\"\r\n      [enableSearch]=\"enableSearch\"\r\n      [placeholderSearch]=\"placeholderSearch\">\r\n      <div toolbarLeft>toolbarLeft</div>\r\n      <div toolbarCenter>toolbarCenter</div>\r\n      <div toolbarRight>toolbarRight</div>\r\n      <ag-grid-toolbar-action actionsLeft tooltip=\"I'm here because of *actionsLeft* content projection\">arrow_left</ag-grid-toolbar-action>\r\n      <ag-grid-toolbar-action actionsRight tooltip=\"I'm here because of *actionsRight* content projection\">arrow_right</ag-grid-toolbar-action>\r\n      <ag-grid-angular\r\n        style=\"width: 100%; height: 320px;\"\r\n        [gridOptions]=\"gridOptions\">\r\n      </ag-grid-angular>\r\n    </ag-grid-expansion>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "datasourceService",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/expansion/ag-grid-angular/src/stories/story-helpers/grid-options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new DatasourceService()"
            },
            {
                "name": "gridOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/expansion/ag-grid-angular/src/stories/story-helpers/grid-options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "gridOptionsService.clientSide()"
            },
            {
                "name": "gridOptionsService",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/expansion/ag-grid-angular/src/stories/story-helpers/grid-options.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "new GridOptionsService()"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/expansion/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[]"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AgGridExtensionComponent>",
                "defaultValue": "{\r\n  title: 'Ag Grid Extension',\r\n  component: AgGridExtensionComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [AgGridModule, AgGridExpansionModule],\r\n    }),\r\n  ],\r\n  render: (args) => {\r\n    return {\r\n      props: {\r\n        ...args,\r\n        actions,\r\n        gridOptions,\r\n      },\r\n      template: `\r\n    <ag-grid-expansion\r\n      [class]=\"agTheme\"\r\n      [actions]=\"actions\"\r\n      [disableSearch]=\"disableSearch\"\r\n      [debounceSearch]=\"debounceSearch\"\r\n      [enableSearch]=\"enableSearch\"\r\n      [placeholderSearch]=\"placeholderSearch\">\r\n      <ag-grid-angular\r\n        style=\"width: 100%; height: 700px;\"\r\n        [gridOptions]=\"gridOptions\">\r\n      </ag-grid-angular>\r\n    </ag-grid-expansion>\r\n    `,\r\n    };\r\n  },\r\n  tags: ['autodocs'],\r\n}"
            },
            {
                "name": "pkg",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/expansion/ag-grid-angular/src/lib/constants/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'@expansion/ag-grid-angular'"
            },
            {
                "name": "presetActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/actions-sets.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AgGridToolbarAction",
                "defaultValue": "{\r\n  export: {\r\n    icon: 'file_download',\r\n    tooltip: 'Export as csv',\r\n    clickFn: ({ api }) => {\r\n      api.exportDataAsCsv();\r\n    },\r\n  },\r\n  fit: {\r\n    icon: 'view_column',\r\n    tooltip: 'Fit columns',\r\n    clickFn: ({ api }) => {\r\n      api.sizeColumnsToFit();\r\n    },\r\n  },\r\n  redo: {\r\n    disabled: true,\r\n    icon: 'redo',\r\n    tooltip: 'Redo',\r\n    clickFn: ({ api }) => {\r\n      api.redoCellEditing();\r\n    },\r\n  },\r\n  reset: {\r\n    icon: 'restart_alt',\r\n    tooltip: 'Reset columns',\r\n    clickFn: ({ api }) => {\r\n      api.resetColumnState();\r\n    },\r\n  },\r\n  undo: {\r\n    disabled: true,\r\n    icon: 'undo',\r\n    tooltip: 'Undo',\r\n    clickFn: ({ api }) => {\r\n      api.undoCellEditing();\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/expansion/ag-grid-angular/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\r\n  args: { agTheme: 'ag-theme-balham' },\r\n  argTypes: {\r\n    agTheme: {\r\n      control: { type: 'radio' },\r\n      options: [\r\n        'ag-theme-alpine',\r\n        'ag-theme-balham',\r\n        'ag-theme-material',\r\n        'ag-theme-quartz',\r\n      ],\r\n    },\r\n  },\r\n  parameters: {\r\n    actions: { argTypesRegex: '^on[A-Z].*' },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/i,\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "SeachAndActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    actions: actions,\r\n    debounceSearch: 500,\r\n    disableSearch: false,\r\n    enableSearch: true,\r\n    placeholderSearch: 'Search..',\r\n  },\r\n}"
            },
            {
                "name": "timer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            }
        ],
        "functions": [
            {
                "name": "generateRandomBrand",
                "file": "projects/expansion/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "generateRandomModel",
                "file": "projects/expansion/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "brand",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "brand",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "generateRandomPrice",
                "file": "projects/expansion/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            }
        ],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AgGridExtensionComponent>",
                "file": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AgGridToolbarAction[]",
                    "defaultValue": "[\r\n  {\r\n    clickFn: ({ api }) => {\r\n      api.applyTransaction({ add: [{}] });\r\n    },\r\n    icon: 'add',\r\n    tooltip: 'Add new row',\r\n  },\r\n  {\r\n    clickFn: ({ api }) => {\r\n      const rows = api.getSelectedRows();\r\n      api.applyTransaction({ remove: rows });\r\n    },\r\n    disabled: true,\r\n    icon: 'delete',\r\n    tooltip: 'Delete selected row(s)',\r\n  },\r\n  {},\r\n  ...actionsSets.redoUndo,\r\n  {},\r\n  ...actionsSets.standard,\r\n]"
                },
                {
                    "name": "ContentProjections",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    actions: actions,\r\n    debounceSearch: 500,\r\n    disableSearch: false,\r\n    enableSearch: true,\r\n    placeholderSearch: 'Search..',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      actions,\r\n      gridOptions,\r\n    },\r\n    template: `\r\n    <ag-grid-expansion\r\n      [class]=\"agTheme\"\r\n      [actions]=\"actions\"\r\n      [disableSearch]=\"disableSearch\"\r\n      [debounceSearch]=\"debounceSearch\"\r\n      [enableSearch]=\"enableSearch\"\r\n      [placeholderSearch]=\"placeholderSearch\">\r\n      <div toolbarLeft>toolbarLeft</div>\r\n      <div toolbarCenter>toolbarCenter</div>\r\n      <div toolbarRight>toolbarRight</div>\r\n      <ag-grid-toolbar-action actionsLeft tooltip=\"I'm here because of *actionsLeft* content projection\">arrow_left</ag-grid-toolbar-action>\r\n      <ag-grid-toolbar-action actionsRight tooltip=\"I'm here because of *actionsRight* content projection\">arrow_right</ag-grid-toolbar-action>\r\n      <ag-grid-angular\r\n        style=\"width: 100%; height: 320px;\"\r\n        [gridOptions]=\"gridOptions\">\r\n      </ag-grid-angular>\r\n    </ag-grid-expansion>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AgGridExtensionComponent>",
                    "defaultValue": "{\r\n  title: 'Ag Grid Extension',\r\n  component: AgGridExtensionComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [AgGridModule, AgGridExpansionModule],\r\n    }),\r\n  ],\r\n  render: (args) => {\r\n    return {\r\n      props: {\r\n        ...args,\r\n        actions,\r\n        gridOptions,\r\n      },\r\n      template: `\r\n    <ag-grid-expansion\r\n      [class]=\"agTheme\"\r\n      [actions]=\"actions\"\r\n      [disableSearch]=\"disableSearch\"\r\n      [debounceSearch]=\"debounceSearch\"\r\n      [enableSearch]=\"enableSearch\"\r\n      [placeholderSearch]=\"placeholderSearch\">\r\n      <ag-grid-angular\r\n        style=\"width: 100%; height: 700px;\"\r\n        [gridOptions]=\"gridOptions\">\r\n      </ag-grid-angular>\r\n    </ag-grid-expansion>\r\n    `,\r\n    };\r\n  },\r\n  tags: ['autodocs'],\r\n}"
                },
                {
                    "name": "SeachAndActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    actions: actions,\r\n    debounceSearch: 500,\r\n    disableSearch: false,\r\n    enableSearch: true,\r\n    placeholderSearch: 'Search..',\r\n  },\r\n}"
                }
            ],
            "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/actions-sets.ts": [
                {
                    "name": "actionsSets",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/actions-sets.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  redoUndo: [presetActions.redo, presetActions.undo],\r\n  standard: [presetActions.reset, presetActions.fit, presetActions.export],\r\n}"
                },
                {
                    "name": "presetActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/actions-sets.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AgGridToolbarAction",
                    "defaultValue": "{\r\n  export: {\r\n    icon: 'file_download',\r\n    tooltip: 'Export as csv',\r\n    clickFn: ({ api }) => {\r\n      api.exportDataAsCsv();\r\n    },\r\n  },\r\n  fit: {\r\n    icon: 'view_column',\r\n    tooltip: 'Fit columns',\r\n    clickFn: ({ api }) => {\r\n      api.sizeColumnsToFit();\r\n    },\r\n  },\r\n  redo: {\r\n    disabled: true,\r\n    icon: 'redo',\r\n    tooltip: 'Redo',\r\n    clickFn: ({ api }) => {\r\n      api.redoCellEditing();\r\n    },\r\n  },\r\n  reset: {\r\n    icon: 'restart_alt',\r\n    tooltip: 'Reset columns',\r\n    clickFn: ({ api }) => {\r\n      api.resetColumnState();\r\n    },\r\n  },\r\n  undo: {\r\n    disabled: true,\r\n    icon: 'undo',\r\n    tooltip: 'Undo',\r\n    clickFn: ({ api }) => {\r\n      api.undoCellEditing();\r\n    },\r\n  },\r\n}"
                }
            ],
            "projects/expansion/ag-grid-angular/src/stories/story-helpers/grid-options.ts": [
                {
                    "name": "datasourceService",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/expansion/ag-grid-angular/src/stories/story-helpers/grid-options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new DatasourceService()"
                },
                {
                    "name": "gridOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/expansion/ag-grid-angular/src/stories/story-helpers/grid-options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "gridOptionsService.clientSide()"
                },
                {
                    "name": "gridOptionsService",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/expansion/ag-grid-angular/src/stories/story-helpers/grid-options.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "new GridOptionsService()"
                }
            ],
            "projects/expansion/ag-grid-angular/src/stories/story-helpers/datasource.service.ts": [
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/expansion/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[]"
                }
            ],
            "projects/expansion/ag-grid-angular/src/lib/constants/index.ts": [
                {
                    "name": "pkg",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/expansion/ag-grid-angular/src/lib/constants/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'@expansion/ag-grid-angular'"
                }
            ],
            "projects/expansion/ag-grid-angular/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/expansion/ag-grid-angular/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\r\n  args: { agTheme: 'ag-theme-balham' },\r\n  argTypes: {\r\n    agTheme: {\r\n      control: { type: 'radio' },\r\n      options: [\r\n        'ag-theme-alpine',\r\n        'ag-theme-balham',\r\n        'ag-theme-material',\r\n        'ag-theme-quartz',\r\n      ],\r\n    },\r\n  },\r\n  parameters: {\r\n    actions: { argTypesRegex: '^on[A-Z].*' },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/i,\r\n      },\r\n    },\r\n  },\r\n}"
                }
            ],
            "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts": [
                {
                    "name": "timer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ]
        },
        "groupedFunctions": {
            "projects/expansion/ag-grid-angular/src/stories/story-helpers/datasource.service.ts": [
                {
                    "name": "generateRandomBrand",
                    "file": "projects/expansion/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                },
                {
                    "name": "generateRandomModel",
                    "file": "projects/expansion/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "brand",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "brand",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generateRandomPrice",
                    "file": "projects/expansion/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AgGridExtensionComponent>",
                    "file": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 7,
        "status": "low",
        "files": [
            {
                "filePath": "projects/expansion/ag-grid-angular/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/actions-sets.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsSets",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/actions-sets.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "presetActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/ag-grid-expansion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AgGridExtensionComponent",
                "coveragePercent": 66,
                "coverageCount": "6/9",
                "status": "good"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar-action/ag-grid-toolbar-action.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AgGridToolbarActionComponent",
                "coveragePercent": 33,
                "coverageCount": "2/6",
                "status": "medium"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AgGridToolbarSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "timer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar/ag-grid-toolbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AgGridToolbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-context.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AgGridContext",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-toolbar-action.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AgGridToolbarAction",
                "coveragePercent": 85,
                "coverageCount": "6/7",
                "status": "very-good"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/lib/constants/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pkg",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ContentProjections",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SeachAndActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DatasourceService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "generateRandomBrand",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "generateRandomModel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "generateRandomPrice",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/stories/story-helpers/datasource.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/stories/story-helpers/grid-options.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GridOptionsService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/stories/story-helpers/grid-options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "datasourceService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/stories/story-helpers/grid-options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "gridOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/stories/story-helpers/grid-options.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "gridOptionsService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}