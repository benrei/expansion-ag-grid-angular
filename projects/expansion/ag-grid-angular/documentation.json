{
    "pipes": [],
    "interfaces": [
        {
            "name": "AgGridContext",
            "id": "interface-AgGridContext-6fd7f50d506b037c58659d0f28a657a20a046b8664a0969ce4eb5be360024a176bdafe2454d8c4d83d3d6c72ea5d906770a4e7a012abf576093bf0f1acc8aa55",
            "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-context.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { IRowNode } from 'ag-grid-community';\r\n\r\nimport { AgGridEvent } from './ag-grid-event';\r\nimport { AgGridFilters } from './ag-grid-filters';\r\n\r\nexport interface AgGridContext<TData = any> {\r\n  /** Used by `suppressKeyboardEvent` on key `delete` press etc */\r\n  deleteFn?: (IRowNode: IRowNode<TData>) => void;\r\n  /** Tells grid what entity it's working with. Often used by `getRows` endpoint */\r\n  entity?: string;\r\n  /** Extra filters added on top of standard grid filters. Often used in `getRows` request */\r\n  externalFilters?: AgGridFilters;\r\n  /** An arrow function to load client side data. Used by `reload` toolbar action */\r\n  reloadData?: (event?: AgGridEvent<TData>) => void;\r\n  /** Grid global serach text. Used by server-side grid's datasource to add same `quickFilter` functionality as ag-grids client-side `quickFilter` */\r\n  quickFilterText?: string;\r\n  /** Object of keyboard keys to suppress. `key` must match `params.event.key` */\r\n  // suppressKeyboard?: {\r\n  //   [key: string]: (params: SuppressKeyboardEventParams<TData>) => boolean;\r\n  // };\r\n  /** Total row count for server-side grids. Used by `RowCountStatusPanel` */\r\n  totalCount?: number;\r\n}\r\n",
            "properties": [
                {
                    "name": "deleteFn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "<p>Used by <code>suppressKeyboardEvent</code> on key <code>delete</code> press etc</p>\n",
                    "line": 8,
                    "rawdescription": "\nUsed by `suppressKeyboardEvent` on key `delete` press etc"
                },
                {
                    "name": "entity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>Tells grid what entity it&#39;s working with. Often used by <code>getRows</code> endpoint</p>\n",
                    "line": 10,
                    "rawdescription": "\nTells grid what entity it's working with. Often used by `getRows` endpoint"
                },
                {
                    "name": "externalFilters",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AgGridFilters",
                    "optional": true,
                    "description": "<p>Extra filters added on top of standard grid filters. Often used in <code>getRows</code> request</p>\n",
                    "line": 12,
                    "rawdescription": "\nExtra filters added on top of standard grid filters. Often used in `getRows` request"
                },
                {
                    "name": "quickFilterText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>Grid global serach text. Used by server-side grid&#39;s datasource to add same <code>quickFilter</code> functionality as ag-grids client-side <code>quickFilter</code></p>\n",
                    "line": 16,
                    "rawdescription": "\nGrid global serach text. Used by server-side grid's datasource to add same `quickFilter` functionality as ag-grids client-side `quickFilter`"
                },
                {
                    "name": "reloadData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "<p>An arrow function to load client side data. Used by <code>reload</code> toolbar action</p>\n",
                    "line": 14,
                    "rawdescription": "\nAn arrow function to load client side data. Used by `reload` toolbar action"
                },
                {
                    "name": "totalCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "<p>Total row count for server-side grids. Used by <code>RowCountStatusPanel</code></p>\n",
                    "line": 22,
                    "rawdescription": "\nTotal row count for server-side grids. Used by `RowCountStatusPanel`"
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "AgGridEvent",
            "id": "interface-AgGridEvent-0dea394125055f8cb7865b4355fbfa286cd97f5724aa8cec06a7a1db4742bf4e8e0d01cca1b59148bdde48ed9eecc226f1277077b501e6014868c68458fff391",
            "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-event.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ColumnApi, GridApi } from 'ag-grid-community';\r\nimport { AgGridContext } from './ag-grid-context';\r\n\r\nexport interface AgGridEvent<TData = any> {\r\n  api: GridApi<TData>;\r\n  columnApi: ColumnApi;\r\n  context: AgGridContext<TData>;\r\n}\r\n",
            "properties": [
                {
                    "name": "api",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GridApi<TData>",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "columnApi",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ColumnApi",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "context",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AgGridContext<TData>",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "AgGridFilter",
            "id": "interface-AgGridFilter-c6f0e12a2d64ac2f20f3de636e79c7770a77adbea4d5a8f695f5abf028aadf7004c46f3a5b1128033764ea44d1a7c643e96b91e296f295c20bcdb01136bd708a",
            "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-filters.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n  DateFilterModel,\r\n  NumberFilterModel,\r\n  TextFilterModel,\r\n} from 'ag-grid-community';\r\nimport { ISimpleFilterModelType } from 'ag-grid-community/dist/lib/filter/provided/simpleFilter';\r\n\r\nexport interface AgGridFilters {\r\n  [key: string]: AgGridFilter;\r\n}\r\n\r\nexport interface AgGridFilter {\r\n  condition1?: TextFilterModel | NumberFilterModel | DateFilterModel;\r\n  condition2?: TextFilterModel | NumberFilterModel | DateFilterModel;\r\n  /** Format: YYYY-MM-DD hh:mm:ss */\r\n  dateFrom?: string | null;\r\n  /** Format: YYYY-MM-DD hh:mm:ss */\r\n  dateTo?: string | null;\r\n  filterType?: 'date' | 'number' | 'set' | 'text';\r\n  /** Value to filter by */\r\n  filter?: boolean | number | string | null;\r\n  operator?: 'AND' | 'OR';\r\n  /**\r\n   * - Date - default: `equals`\r\n   * - Number - default: `equals`\r\n   * - Text - default: `contains`\r\n   *\r\n   * See docs: https://www.ag-grid.com/angular-data-grid/filter-provided-simple/#simple-filter-options */\r\n  type?: ISimpleFilterModelType;\r\n  /** Instead of `filter` property when `filterType = 'set'` */\r\n  values?: any[];\r\n}\r\n",
            "properties": [
                {
                    "name": "condition1",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TextFilterModel | NumberFilterModel | DateFilterModel",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "condition2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TextFilterModel | NumberFilterModel | DateFilterModel",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "dateFrom",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "<p>Format: YYYY-MM-DD hh:mm:ss</p>\n",
                    "line": 16,
                    "rawdescription": "\nFormat: YYYY-MM-DD hh:mm:ss"
                },
                {
                    "name": "dateTo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "<p>Format: YYYY-MM-DD hh:mm:ss</p>\n",
                    "line": 18,
                    "rawdescription": "\nFormat: YYYY-MM-DD hh:mm:ss"
                },
                {
                    "name": "filter",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | number | string | null",
                    "optional": true,
                    "description": "<p>Value to filter by</p>\n",
                    "line": 21,
                    "rawdescription": "\nValue to filter by"
                },
                {
                    "name": "filterType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"date\" | \"number\" | \"set\" | \"text\"",
                    "optional": true,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "operator",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"AND\" | \"OR\"",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ISimpleFilterModelType",
                    "optional": true,
                    "description": "<ul>\n<li>Date - default: <code>equals</code></li>\n<li>Number - default: <code>equals</code></li>\n<li>Text - default: <code>contains</code></li>\n</ul>\n<p>See docs: <a href=\"https://www.ag-grid.com/angular-data-grid/filter-provided-simple/#simple-filter-options\">https://www.ag-grid.com/angular-data-grid/filter-provided-simple/#simple-filter-options</a></p>\n",
                    "line": 29,
                    "rawdescription": "\n\n- Date - default: `equals`\n- Number - default: `equals`\n- Text - default: `contains`\n\nSee docs: https://www.ag-grid.com/angular-data-grid/filter-provided-simple/#simple-filter-options"
                },
                {
                    "name": "values",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any[]",
                    "optional": true,
                    "description": "<p>Instead of <code>filter</code> property when <code>filterType = &#39;set&#39;</code></p>\n",
                    "line": 31,
                    "rawdescription": "\nInstead of `filter` property when `filterType = 'set'`"
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "AgGridFilters",
            "id": "interface-AgGridFilters-c6f0e12a2d64ac2f20f3de636e79c7770a77adbea4d5a8f695f5abf028aadf7004c46f3a5b1128033764ea44d1a7c643e96b91e296f295c20bcdb01136bd708a",
            "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-filters.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import {\r\n  DateFilterModel,\r\n  NumberFilterModel,\r\n  TextFilterModel,\r\n} from 'ag-grid-community';\r\nimport { ISimpleFilterModelType } from 'ag-grid-community/dist/lib/filter/provided/simpleFilter';\r\n\r\nexport interface AgGridFilters {\r\n  [key: string]: AgGridFilter;\r\n}\r\n\r\nexport interface AgGridFilter {\r\n  condition1?: TextFilterModel | NumberFilterModel | DateFilterModel;\r\n  condition2?: TextFilterModel | NumberFilterModel | DateFilterModel;\r\n  /** Format: YYYY-MM-DD hh:mm:ss */\r\n  dateFrom?: string | null;\r\n  /** Format: YYYY-MM-DD hh:mm:ss */\r\n  dateTo?: string | null;\r\n  filterType?: 'date' | 'number' | 'set' | 'text';\r\n  /** Value to filter by */\r\n  filter?: boolean | number | string | null;\r\n  operator?: 'AND' | 'OR';\r\n  /**\r\n   * - Date - default: `equals`\r\n   * - Number - default: `equals`\r\n   * - Text - default: `contains`\r\n   *\r\n   * See docs: https://www.ag-grid.com/angular-data-grid/filter-provided-simple/#simple-filter-options */\r\n  type?: ISimpleFilterModelType;\r\n  /** Instead of `filter` property when `filterType = 'set'` */\r\n  values?: any[];\r\n}\r\n",
            "properties": [],
            "indexSignatures": [
                {
                    "id": "index-declaration-c6f0e12a2d64ac2f20f3de636e79c7770a77adbea4d5a8f695f5abf028aadf7004c46f3a5b1128033764ea44d1a7c643e96b91e296f295c20bcdb01136bd708a",
                    "args": [
                        {
                            "name": "key",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "AgGridFilter",
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "kind": 181,
            "methods": [],
            "extends": []
        },
        {
            "name": "AgGridOptions",
            "id": "interface-AgGridOptions-dc80b7279aa220eed95a938992bd7fa6084f63aa53d50dab7e28008b0cc04e3efb277b50747c38d04bd537a55ce3cfe528d18250a34fa8996bde42e5a66b6257",
            "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-options.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { GridOptions } from 'ag-grid-community';\r\nimport { AgGridContext } from './ag-grid-context';\r\n\r\n/** Ag-grid `GridOptions` including typed `context` */\r\nexport interface AgGridOptions<TData = any> extends GridOptions<TData> {\r\n  /** Shared contextual information to be passed around in the grid */\r\n  context?: AgGridContext<TData>;\r\n}\r\n",
            "properties": [
                {
                    "name": "context",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AgGridContext<TData>",
                    "optional": true,
                    "description": "<p>Shared contextual information to be passed around in the grid</p>\n",
                    "line": 7,
                    "rawdescription": "\nShared contextual information to be passed around in the grid"
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "description": "<p>Ag-grid <code>GridOptions</code> including typed <code>context</code></p>\n",
            "rawdescription": "\nAg-grid `GridOptions` including typed `context`",
            "methods": [],
            "extends": [
                "GridOptions"
            ]
        },
        {
            "name": "AgGridToolbarAction",
            "id": "interface-AgGridToolbarAction-ffc2d005e377a86a5f041e9c7b74c206f2c7e05308a0c995dc7f2a8316ba02b8d000dfbda867abd3b05645bee32b1376b96bec8efdf853b3ad3b078abaf781b2",
            "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-toolbar-action.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AgGridEvent } from './ag-grid-event';\r\n\r\nexport interface AgGridToolbarAction<TData = any> {\r\n  /** Action color */\r\n  color?: string;\r\n  /** Default: `false`. */\r\n  disabled?: boolean;\r\n  /** If no icon is provided, the `ToolbarAction` will be treated as a separator. */\r\n  icon?: string;\r\n  /** ID for toolbar action, used to set html id. */\r\n  id?: string;\r\n  /** tooltip translated text. */\r\n  tooltip?: string;\r\n  /** Arrow function to execute on click. */\r\n  clickFn?: (event: AgGridToolbarActionEvent<TData>) => void;\r\n}\r\nexport interface AgGridToolbarActionEvent<TData = any>\r\n  extends AgGridEvent<TData> {}\r\n",
            "properties": [
                {
                    "name": "clickFn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "<p>Arrow function to execute on click.</p>\n",
                    "line": 15,
                    "rawdescription": "\nArrow function to execute on click."
                },
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>Action color</p>\n",
                    "line": 5,
                    "rawdescription": "\nAction color"
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "<p>Default: <code>false</code>.</p>\n",
                    "line": 7,
                    "rawdescription": "\nDefault: `false`."
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>If no icon is provided, the <code>ToolbarAction</code> will be treated as a separator.</p>\n",
                    "line": 9,
                    "rawdescription": "\nIf no icon is provided, the `ToolbarAction` will be treated as a separator."
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>ID for toolbar action, used to set html id.</p>\n",
                    "line": 11,
                    "rawdescription": "\nID for toolbar action, used to set html id."
                },
                {
                    "name": "tooltip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "<p>tooltip translated text.</p>\n",
                    "line": 13,
                    "rawdescription": "\ntooltip translated text."
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "AgGridToolbarActionEvent",
            "id": "interface-AgGridToolbarActionEvent-ffc2d005e377a86a5f041e9c7b74c206f2c7e05308a0c995dc7f2a8316ba02b8d000dfbda867abd3b05645bee32b1376b96bec8efdf853b3ad3b078abaf781b2",
            "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-toolbar-action.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { AgGridEvent } from './ag-grid-event';\r\n\r\nexport interface AgGridToolbarAction<TData = any> {\r\n  /** Action color */\r\n  color?: string;\r\n  /** Default: `false`. */\r\n  disabled?: boolean;\r\n  /** If no icon is provided, the `ToolbarAction` will be treated as a separator. */\r\n  icon?: string;\r\n  /** ID for toolbar action, used to set html id. */\r\n  id?: string;\r\n  /** tooltip translated text. */\r\n  tooltip?: string;\r\n  /** Arrow function to execute on click. */\r\n  clickFn?: (event: AgGridToolbarActionEvent<TData>) => void;\r\n}\r\nexport interface AgGridToolbarActionEvent<TData = any>\r\n  extends AgGridEvent<TData> {}\r\n",
            "properties": [],
            "indexSignatures": [],
            "methods": [],
            "extends": [
                "AgGridEvent"
            ]
        }
    ],
    "injectables": [
        {
            "name": "GridOptionsService",
            "id": "injectable-GridOptionsService-0346603611f70e167ad1680f492ecf74212d0625518dd3829cfeaa9ebcf4c770698f161e8ca7118403062996bbc13296a361133adadefa3612fe5aa8af69de43",
            "file": "projects/expansion/ag-grid-angular/src/stories/story-helpers/grid-options.service.ts",
            "properties": [
                {
                    "name": "clientSide",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "core",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "getDefaultColDef",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "serverSide",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport { ColDef, GridOptions } from 'ag-grid-community';\r\nimport { ServerSideDatasourceService } from './server-side-datasource.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class GridOptionsService {\r\n  constructor(\r\n    private serverSideDatasourceService: ServerSideDatasourceService\r\n  ) {}\r\n\r\n  getDefaultColDef = (): ColDef => {\r\n    return { editable: true, sortable: true };\r\n  };\r\n\r\n  core = (): GridOptions => {\r\n    return {\r\n      columnDefs: [\r\n        { field: 'id', hide: true },\r\n        { field: 'brand' },\r\n        { field: 'model' },\r\n        { field: 'price' },\r\n      ],\r\n      defaultColDef: this.getDefaultColDef(),\r\n      enableCellChangeFlash: true,\r\n      editType: 'fullRow',\r\n      getRowId: (params) => {\r\n        return params.data['id'];\r\n      },\r\n      rowSelection: 'single',\r\n    };\r\n  };\r\n\r\n  clientSide = (): GridOptions => {\r\n    return {\r\n      ...this.core(),\r\n      rowData: this.serverSideDatasourceService.generateItems(5),\r\n      rowModelType: 'clientSide',\r\n    };\r\n  };\r\n\r\n  serverSide = (): GridOptions => {\r\n    return {\r\n      ...this.core(),\r\n      rowModelType: 'serverSide',\r\n      serverSideDatasource:\r\n        this.serverSideDatasourceService.createServerSideDatasource(100),\r\n    };\r\n  };\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "serverSideDatasourceService",
                        "type": "ServerSideDatasourceService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 6,
                "jsdoctags": [
                    {
                        "name": "serverSideDatasourceService",
                        "type": "ServerSideDatasourceService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "ServerSideDatasourceService",
            "id": "injectable-ServerSideDatasourceService-de3b24c283acc907370eb036e341996ad2a260f5e696f64214a4bce8c53fdd2e65ca3d904d1045a38800842ae5f5c46f92ca35f18d48aed1a5250599e8de3bb5",
            "file": "projects/expansion/ag-grid-angular/src/stories/story-helpers/server-side-datasource.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "createFakeServer",
                    "args": [
                        {
                            "name": "dataCount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{ getData: (request: IServerSideGetRowsRequest) => { success: boolean; rows: any; }; }",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "dataCount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createServerSideDatasource",
                    "args": [
                        {
                            "name": "dataCount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "100"
                        }
                    ],
                    "optional": false,
                    "returnType": "IServerSideDatasource",
                    "typeParameters": [],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dataCount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "100",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generateItems",
                    "args": [
                        {
                            "name": "dataCount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any[]",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dataCount",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\r\nimport {\r\n  IServerSideDatasource,\r\n  IServerSideGetRowsRequest,\r\n} from 'ag-grid-community';\r\n@Injectable({ providedIn: 'root' })\r\nexport class ServerSideDatasourceService {\r\n  constructor() {}\r\n\r\n  createServerSideDatasource(dataCount = 100): IServerSideDatasource {\r\n    const server = this.createFakeServer(dataCount);\r\n    return {\r\n      getRows: (params) => {\r\n        console.log('[Datasource] - rows requested by grid: ', params.request);\r\n        // get data for request from our fake server\r\n        const response = server.getData(params.request);\r\n        // simulating real server call with a 500ms delay\r\n        setTimeout(function () {\r\n          if (response.success) {\r\n            // supply rows for requested block to grid\r\n            params.success({ rowData: response.rows });\r\n          } else {\r\n            params.fail();\r\n          }\r\n        }, 500);\r\n      },\r\n    };\r\n  }\r\n\r\n  generateItems(dataCount: number): any[] {\r\n    const items: any[] = [];\r\n    for (let i = 0; i <= dataCount; i++) {\r\n      items.push({\r\n        id: i,\r\n        brand: generateRandomBrand(),\r\n        model: generateRandomModel(),\r\n        price: generateRandomPrice(),\r\n      });\r\n    }\r\n    return items;\r\n  }\r\n\r\n  private createFakeServer(dataCount: number) {\r\n    const items = this.generateItems(dataCount);\r\n    return {\r\n      getData: (request: IServerSideGetRowsRequest) => {\r\n        // in this simplified fake server all rows are contained in an array\r\n        const requestedRows = items.slice(request.startRow, request.endRow);\r\n        return {\r\n          success: true,\r\n          rows: requestedRows,\r\n        };\r\n      },\r\n    };\r\n  }\r\n}\r\n// Generate 97 more items with random data\r\nconst items = [];\r\nfor (let i = 0; i <= 100; i++) {\r\n  items.push({\r\n    id: i,\r\n    brand: generateRandomBrand(),\r\n    model: generateRandomModel(),\r\n    price: generateRandomPrice(),\r\n  });\r\n}\r\n\r\n// Function to generate random make\r\nfunction generateRandomBrand() {\r\n  const brand = ['Honda', 'Chevrolet', 'Nissan', 'Volkswagen', 'Hyundai'];\r\n  return brand[Math.floor(Math.random() * brand.length)];\r\n}\r\n\r\n// Function to generate random model\r\nfunction generateRandomModel() {\r\n  const models = ['Civic', 'Malibu', 'Altima', 'Jetta', 'Elantra'];\r\n  return models[Math.floor(Math.random() * models.length)];\r\n}\r\n\r\n// Function to generate random price\r\nfunction generateRandomPrice() {\r\n  return Math.floor(Math.random() * 50000) + 20000;\r\n}\r\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 7
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AgGridExtensionComponent",
            "id": "component-AgGridExtensionComponent-ba57e63b3e665ab5f1c500bd710f4b9b2ea84e496ba3e41397c96ca534b34aaf6b20941c5164a8158dbbc433b5ca1dcf5478fc4f84935fc8106c8498774288c3",
            "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/ag-grid-expansion.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ag-grid-expansion",
            "styleUrls": [
                "./ag-grid-expansion.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ag-grid-expansion.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "actions",
                    "defaultValue": "actionsSets.standard",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nToolbar actions",
                    "description": "<p>Toolbar actions</p>\n",
                    "line": 99,
                    "type": "AgGridToolbarAction[]",
                    "decorators": []
                },
                {
                    "name": "debounceSearch",
                    "defaultValue": "500",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nDebounce in ms for seach input",
                    "description": "<p>Debounce in ms for seach input</p>\n",
                    "line": 101,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "disableSearch",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nDisable search field",
                    "description": "<p>Disable search field</p>\n",
                    "line": 103,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "enableSearch",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nEnable search field",
                    "description": "<p>Enable search field</p>\n",
                    "line": 105,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "placeholderSearch",
                    "defaultValue": "'Search...'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nSeach placeholdet text",
                    "description": "<p>Seach placeholdet text</p>\n",
                    "line": 107,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "agGrid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AgGridAngular",
                    "optional": false,
                    "description": "",
                    "line": 111,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "AgGridAngular"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "context",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AgGridContext",
                    "optional": false,
                    "description": "",
                    "line": 109
                }
            ],
            "methodsClass": [
                {
                    "name": "ngAfterViewInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 123,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "<p>Expands ag-grid with a toolbar, search and actions.</p>\n<h2>Features:</h2>\n<ul>\n<li>Quick search</li>\n<li>Toolbar actions</li>\n</ul>\n<h2>Usage</h2>\n<p><strong>Class:</strong> <code>AgGridExtensionComponent</code></p>\n<p><strong>Constants:</strong></p>\n<ul>\n<li><code>actionsSets: AgGridToolbarAction[]</code> =&gt; Predefined sets of actions</li>\n<li><code>presetActions: AgGridToolbarAction</code> =&gt; Predefined single actions. Fit columns, reset columns, cvs export etc</li>\n</ul>\n<p><strong>Interfaces:</strong></p>\n<ul>\n<li><code>AgGridOptions</code> =&gt; <code>GridOptions</code> with <code>gridOptions.context</code> typed as <code>AgGridContext</code></li>\n<li><code>AgGridContext</code> =&gt; Interface for ag-grid <code>context</code></li>\n<li><code>AgGridFilter</code> =&gt; Interface for grid filter</li>\n<li><code>AgGridFilters</code> =&gt; Interface for object of <code>AgGridFilter</code>&#39;s</li>\n<li><code>AgGridToolbarAction</code> =&gt; Properties for a toolbar action</li>\n<li><code>AgGridToolbarActionEvent</code> =&gt; Type for the toolbar action click callback function</li>\n</ul>\n<p><strong>Module:</strong> <code>import { AgGridExpansionModule } from &#39;@expansion/ag-grid-angular&#39;;</code></p>\n<p><strong>Selector:</strong> <code>ag-grid-expansion</code></p>\n<p><strong>Content projection:</strong></p>\n<ul>\n<li>Multi-slot<ul>\n<li><code>toolbarLeft</code> =&gt; Toolbar left</li>\n<li><code>toolbarCenter</code> =&gt; Toolbar center</li>\n<li><code>toolbarRight</code> =&gt; Toolbar right</li>\n<li><code>actionsLeft</code> =&gt; pre actions</li>\n<li><code>actionsRight</code> =&gt; post actions</li>\n</ul>\n</li>\n<li>Single-slot</li>\n</ul>\n<h3>Typescript</h3>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-ts\">export class ExampleGridComponent {\n  actions: AgGridToolbarAction[];\n  gridOptions: AgGridOptions;\n}</code></pre></div><h3>HTML</h3>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">&lt;ag-grid-expansion [actions]=&quot;actions&quot;&gt;\n  &lt;ag-grid-angular\n    class=&quot;ag-theme-balham&quot;\n    [gridOptions]=&quot;gridOptions&quot;&gt;\n  &lt;/ag-grid-angular&gt;\n&lt;/ag-grid-expansion&gt;</code></pre></div><h2>Technical requirements</h2>\n<p>Either <code>context</code> or <code>gridOptions.context</code> must exist on the <code>ag-grid-angular</code> element.</p>\n<h3>Global search</h3>\n<h4>Client side</h4>\n<p>Works out of the box for client side grids.</p>\n<h4>Server side</h4>\n<p>We need to use <code>quickFilterText</code> in our datasource implementation <code>IServerSideDatasource</code> like below.</p>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-ts\">  export class ExampleDatasource implements IServerSideDatasource {\n      getRows(params: IServerSideGetRowsParams): void {\n        const { quickFilterText } = params.context as AgGridToolbarContext;\n        // Then use `quickFilterText` in backend call etc..\n      }\n  }</code></pre></div>",
            "rawdescription": "\n\nExpands ag-grid with a toolbar, search and actions.\n## Features:\n- Quick search\n- Toolbar actions\n\n## Usage\n\n**Class:** `AgGridExtensionComponent`\n\n**Constants:**\n- `actionsSets: AgGridToolbarAction[]` => Predefined sets of actions\n- `presetActions: AgGridToolbarAction` => Predefined single actions. Fit columns, reset columns, cvs export etc\n\n**Interfaces:**\n- `AgGridOptions` => `GridOptions` with `gridOptions.context` typed as `AgGridContext`\n- `AgGridContext` => Interface for ag-grid `context`\n- `AgGridFilter` => Interface for grid filter\n- `AgGridFilters` => Interface for object of `AgGridFilter`'s\n- `AgGridToolbarAction` => Properties for a toolbar action\n- `AgGridToolbarActionEvent` => Type for the toolbar action click callback function\n\n**Module:** `import { AgGridExpansionModule } from '@expansion/ag-grid-angular';`\n\n**Selector:** `ag-grid-expansion`\n\n**Content projection:**\n- Multi-slot\n  - `toolbarLeft` => Toolbar left\n  - `toolbarCenter` => Toolbar center\n  - `toolbarRight` => Toolbar right\n  - `actionsLeft` => pre actions\n  - `actionsRight` => post actions\n- Single-slot\n\n### Typescript\n```ts\nexport class ExampleGridComponent {\n  actions: AgGridToolbarAction[];\n  gridOptions: AgGridOptions;\n}\n```\n\n### HTML\n```html\n<ag-grid-expansion [actions]=\"actions\">\n  <ag-grid-angular\n    class=\"ag-theme-balham\"\n    [gridOptions]=\"gridOptions\">\n  </ag-grid-angular>\n</ag-grid-expansion>\n```\n\n## Technical requirements\n\nEither `context` or `gridOptions.context` must exist on the `ag-grid-angular` element.\n\n### Global search\n\n#### Client side\n\nWorks out of the box for client side grids.\n\n#### Server side\n\nWe need to use `quickFilterText` in our datasource implementation `IServerSideDatasource` like below.\n\n```ts\n  export class ExampleDatasource implements IServerSideDatasource {\n      getRows(params: IServerSideGetRowsParams): void {\n        const { quickFilterText } = params.context as AgGridToolbarContext;\n        // Then use `quickFilterText` in backend call etc..\n      }\n  }\n```\n",
            "type": "component",
            "sourceCode": "import {\r\n  ChangeDetectorRef,\r\n  Component,\r\n  ContentChild,\r\n  Input,\r\n} from '@angular/core';\r\nimport { AgGridAngular } from 'ag-grid-angular';\r\nimport {\r\n  AgGridToolbarAction,\r\n  AgGridToolbarActionEvent,\r\n} from './interfaces/ag-grid-toolbar-action';\r\nimport { AgGridContext } from './interfaces/ag-grid-context';\r\nimport { actionsSets } from './actions-sets';\r\n\r\n/**\r\n * Expands ag-grid with a toolbar, search and actions.\r\n * ## Features:\r\n * - Quick search\r\n * - Toolbar actions\r\n *\r\n * ## Usage\r\n *\r\n * **Class:** `AgGridExtensionComponent`\r\n *\r\n * **Constants:**\r\n * - `actionsSets: AgGridToolbarAction[]` => Predefined sets of actions\r\n * - `presetActions: AgGridToolbarAction` => Predefined single actions. Fit columns, reset columns, cvs export etc\r\n *\r\n * **Interfaces:**\r\n * - `AgGridOptions` => `GridOptions` with `gridOptions.context` typed as `AgGridContext`\r\n * - `AgGridContext` => Interface for ag-grid `context`\r\n * - `AgGridFilter` => Interface for grid filter\r\n * - `AgGridFilters` => Interface for object of `AgGridFilter`'s\r\n * - `AgGridToolbarAction` => Properties for a toolbar action\r\n * - `AgGridToolbarActionEvent` => Type for the toolbar action click callback function\r\n *\r\n * **Module:** `import { AgGridExpansionModule } from '@expansion/ag-grid-angular';`\r\n *\r\n * **Selector:** `ag-grid-expansion`\r\n *\r\n * **Content projection:**\r\n * - Multi-slot\r\n *   - `toolbarLeft` => Toolbar left\r\n *   - `toolbarCenter` => Toolbar center\r\n *   - `toolbarRight` => Toolbar right\r\n *   - `actionsLeft` => pre actions\r\n *   - `actionsRight` => post actions\r\n * - Single-slot\r\n *\r\n * ### Typescript\r\n * ```ts\r\n * export class ExampleGridComponent {\r\n *   actions: AgGridToolbarAction[];\r\n *   gridOptions: AgGridOptions;\r\n * }\r\n * ```\r\n *\r\n * ### HTML\r\n * ```html\r\n * <ag-grid-expansion [actions]=\"actions\">\r\n *   <ag-grid-angular\r\n *     class=\"ag-theme-balham\"\r\n *     [gridOptions]=\"gridOptions\">\r\n *   </ag-grid-angular>\r\n * </ag-grid-expansion>\r\n * ```\r\n *\r\n * ## Technical requirements\r\n *\r\n * Either `context` or `gridOptions.context` must exist on the `ag-grid-angular` element.\r\n *\r\n * ### Global search\r\n *\r\n * #### Client side\r\n *\r\n * Works out of the box for client side grids.\r\n *\r\n * #### Server side\r\n *\r\n * We need to use `quickFilterText` in our datasource implementation `IServerSideDatasource` like below.\r\n *\r\n * ```ts\r\n *   export class ExampleDatasource implements IServerSideDatasource {\r\n *       getRows(params: IServerSideGetRowsParams): void {\r\n *         const { quickFilterText } = params.context as AgGridToolbarContext;\r\n *         // Then use `quickFilterText` in backend call etc..\r\n *       }\r\n *   }\r\n * ```\r\n */\r\n@Component({\r\n  selector: 'ag-grid-expansion',\r\n  templateUrl: './ag-grid-expansion.component.html',\r\n  styleUrls: ['./ag-grid-expansion.component.scss'],\r\n  host: { class: 'ag-theme-expansion' },\r\n})\r\nexport class AgGridExtensionComponent {\r\n  /** Toolbar actions */\r\n  @Input() actions: AgGridToolbarAction[] = actionsSets.standard;\r\n  /** Debounce in ms for seach input */\r\n  @Input() debounceSearch = 500;\r\n  /** Disable search field*/\r\n  @Input() disableSearch = false;\r\n  /** Enable search field*/\r\n  @Input() enableSearch = true;\r\n  /** Seach placeholdet text */\r\n  @Input() placeholderSearch = 'Search...';\r\n\r\n  context!: AgGridContext;\r\n\r\n  @ContentChild(AgGridAngular) agGrid!: AgGridAngular;\r\n\r\n  constructor(private cdr: ChangeDetectorRef) {}\r\n\r\n  get toolbarActionEvent(): AgGridToolbarActionEvent {\r\n    return {\r\n      api: this.agGrid.api,\r\n      columnApi: this.agGrid.columnApi,\r\n      context: this.context,\r\n    };\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.context = this.agGrid.context || this.agGrid.gridOptions?.context;\r\n    // agGrid changes after initializing itself\r\n    this.cdr.detectChanges();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  display: flex;\r\n  height: 100%;\r\n  flex-direction: column;\r\n  ::ng-deep ag-grid-angular {\r\n    height: 100%;\r\n  }\r\n  ::ng-deep .ag-overlay {\r\n    height: calc(100% - 62px);\r\n    margin-top: 70px;\r\n  }\r\n}\r\n\r\n::ng-deep .toolbar-action-separator {\r\n  border-right: 1px solid var(--ag-border-color);\r\n  height: 22px;\r\n}\r\n",
                    "styleUrl": "./ag-grid-expansion.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 111,
                "jsdoctags": [
                    {
                        "name": "cdr",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "accessors": {
                "toolbarActionEvent": {
                    "name": "toolbarActionEvent",
                    "getSignature": {
                        "name": "toolbarActionEvent",
                        "type": "",
                        "returnType": "AgGridToolbarActionEvent",
                        "line": 115
                    }
                }
            },
            "templateData": "<ag-grid-toolbar\r\n  [agGrid]=\"agGrid\"\r\n  [debounceSearch]=\"debounceSearch\"\r\n  [disableSearch]=\"disableSearch\"\r\n  [enableSearch]=\"enableSearch\"\r\n  [placeholderSearch]=\"placeholderSearch\"\r\n>\r\n  <ng-content select=\"[toolbarLeft]\" toolbarLeft></ng-content>\r\n  <ng-content select=\"[toolbarCenter]\" toolbarCenter></ng-content>\r\n  <ng-content select=\"[toolbarRight]\" toolbarRight></ng-content>\r\n  <!-- Actions -->\r\n  <ng-content select=\"[actionsLeft]\" toolbarRight></ng-content>\r\n  <ng-container *ngFor=\"let action of actions\" toolbarRight>\r\n    <ng-container *ngIf=\"!action?.icon\">\r\n      <span class=\"toolbar-action-separator\"></span>\r\n    </ng-container>\r\n\r\n    <ag-grid-toolbar-action\r\n      *ngIf=\"action?.icon\"\r\n      [color]=\"action?.color\"\r\n      [disabled]=\"action?.disabled || false\"\r\n      [icon]=\"action.icon\"\r\n      [id]=\"action.id\"\r\n      [tooltip]=\"action.tooltip || ''\"\r\n      (click)=\"action?.clickFn?.(toolbarActionEvent)\"\r\n    ></ag-grid-toolbar-action>\r\n  </ng-container>\r\n  <ng-content select=\"[actionsRight]\" toolbarRight></ng-content>\r\n  <!-- Actions END -->\r\n</ag-grid-toolbar>\r\n<ng-content>\r\n  <!-- ag-grid-angular -->\r\n</ng-content>\r\n"
        },
        {
            "name": "AgGridToolbarActionComponent",
            "id": "component-AgGridToolbarActionComponent-844cc1c6d43b6656a673a98f7fe32b3fc94f734e1719988845c5ef7fc15d466e60318f86486ccc20065002e28e875ce274887337c5661046072eafe811f35598",
            "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar-action/ag-grid-toolbar-action.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ag-grid-toolbar-action",
            "styleUrls": [
                "./ag-grid-toolbar-action.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ag-grid-toolbar-action.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 9,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nIcon name. Example `home`\n- Material icons: https://fonts.google.com/icons\n\n### Requirements\n```html\nAdd this to your html:\n<html>\n  <head>\n    <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons+Outlined\" rel=\"stylesheet\" />\n  </head>\n<html>\n```\n",
                    "description": "<p>Icon name. Example <code>home</code></p>\n<ul>\n<li>Material icons: <a href=\"https://fonts.google.com/icons\">https://fonts.google.com/icons</a></li>\n</ul>\n<h3>Requirements</h3>\n<b>Example :</b><div><pre class=\"line-numbers\"><code class=\"language-html\">Add this to your html:\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;link href=&quot;https://fonts.googleapis.com/icon?family=Material+Icons+Outlined&quot; rel=&quot;stylesheet&quot; /&gt;\n  &lt;/head&gt;\n&lt;html&gt;</code></pre></div>",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\nID for toolbar action, used to set html id",
                    "description": "<p>ID for toolbar action, used to set html id</p>\n",
                    "line": 12,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "tooltip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ag-grid-toolbar-action',\r\n  templateUrl: './ag-grid-toolbar-action.component.html',\r\n  styleUrls: ['./ag-grid-toolbar-action.component.scss'],\r\n})\r\nexport class AgGridToolbarActionComponent {\r\n  @Input() color?: string;\r\n  @Input() disabled?: boolean;\r\n  /** ID for toolbar action, used to set html id */\r\n  @Input() id?: string;\r\n  /** Icon name. Example `home`\r\n   * - Material icons: https://fonts.google.com/icons\r\n   *\r\n   * ### Requirements\r\n   * ```html\r\n   * Add this to your html:\r\n   * <html>\r\n   *   <head>\r\n   *     <link href=\"https://fonts.googleapis.com/icon?family=Material+Icons+Outlined\" rel=\"stylesheet\" />\r\n   *   </head>\r\n   * <html>\r\n   * ```\r\n   */\r\n  @Input() icon?: string;\r\n  @Input() tooltip?: string;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ":host {\r\n  // Prevent click event on \"host\" when .disabled\r\n  display: contents;\r\n}\r\n\r\n.toolbar-action {\r\n  color: var(--ag-secondary-foreground-color);\r\n  font-size: 24px;\r\n  padding: 8px;\r\n  user-select: none;\r\n  &.disabled {\r\n    pointer-events: none;\r\n    color: var(--ag-disabled-foreground-color);\r\n  }\r\n  &:hover {\r\n    cursor: pointer;\r\n    border-radius: 3px;\r\n    background: var(--ag-input-disabled-border-color);\r\n  }\r\n  &:active {\r\n    background: var(--ag-border-color);\r\n  }\r\n}\r\n",
                    "styleUrl": "./ag-grid-toolbar-action.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<span\r\n  class=\"toolbar-action material-icons-outlined\"\r\n  [class.disabled]=\"disabled\"\r\n  [id]=\"id\"\r\n  [style.color]=\"color\"\r\n  [title]=\"tooltip\"\r\n>\r\n  {{ icon }}<ng-content></ng-content>\r\n</span>\r\n"
        },
        {
            "name": "AgGridToolbarComponent",
            "id": "component-AgGridToolbarComponent-0527e6755637111cba815a1beeed61060471c766d3c4f0477d1ea31c79be80688eb3cd804a05b688f3b049b8c71c95cda40ba4d96bea61a956329f3e9097e550",
            "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar/ag-grid-toolbar.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ag-grid-toolbar",
            "styleUrls": [
                "./ag-grid-toolbar.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ag-grid-toolbar.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "agGrid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "AgGridAngular",
                    "decorators": []
                },
                {
                    "name": "debounceSearch",
                    "defaultValue": "500",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "disableSearch",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "enableSearch",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "placeholderSearch",
                    "defaultValue": "'Search...'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { AgGridAngular } from 'ag-grid-angular';\r\n\r\n@Component({\r\n  selector: 'ag-grid-toolbar',\r\n  templateUrl: './ag-grid-toolbar.component.html',\r\n  styleUrls: ['./ag-grid-toolbar.component.scss'],\r\n})\r\nexport class AgGridToolbarComponent {\r\n  @Input() agGrid!: AgGridAngular;\r\n  @Input() debounceSearch = 500;\r\n  @Input() disableSearch = false;\r\n  @Input() enableSearch = true;\r\n  @Input() placeholderSearch = 'Search...';\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".toolbar {\r\n  align-items: center;\r\n  background: var(--ag-header-background-color);\r\n  border: 1px solid var(--ag-border-color);\r\n  border-bottom: none;\r\n  display: flex;\r\n  height: 48px;\r\n  overflow-x: auto;\r\n  padding: 0px 8px;\r\n}\r\n.toolbar-content {\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-left: 8px;\r\n\r\n  &-left {\r\n    align-items: center;\r\n    display: flex;\r\n    gap: 8px;\r\n  }\r\n  &-center {\r\n    align-items: center;\r\n    display: flex;\r\n    gap: 8px;\r\n  }\r\n  &-right {\r\n    align-items: center;\r\n    display: flex;\r\n  }\r\n}\r\n",
                    "styleUrl": "./ag-grid-toolbar.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"toolbar\">\r\n  <ag-grid-toolbar-search\r\n    *ngIf=\"enableSearch\"\r\n    [agGrid]=\"agGrid\"\r\n    [debounceTime]=\"debounceSearch\"\r\n    [disabled]=\"disableSearch\"\r\n    [placeholder]=\"placeholderSearch\"\r\n  ></ag-grid-toolbar-search>\r\n  <div class=\"toolbar-content\">\r\n    <div class=\"toolbar-content-left\">\r\n      <ng-content select=\"[toolbarLeft]\"></ng-content>\r\n    </div>\r\n    <div class=\"toolbar-content-center\">\r\n      <ng-content select=\"[toolbarCenter]\"></ng-content>\r\n    </div>\r\n    <div class=\"toolbar-content-right\">\r\n      <ng-content select=\"[toolbarRight]\"></ng-content>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
        },
        {
            "name": "AgGridToolbarSearchComponent",
            "id": "component-AgGridToolbarSearchComponent-276408b4ad8ef6dc25c9513be2f2b99dcfb50fe169e110518d033a8f95e339824bf4b5e1cbd2ec8f323f8bf18667a756ed016f25efae7fbfe52427f14da82501",
            "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ag-grid-toolbar-search",
            "styleUrls": [
                "./ag-grid-toolbar-search.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./ag-grid-toolbar-search.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "agGrid",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "AgGridAngular",
                    "decorators": []
                },
                {
                    "name": "debounceTime",
                    "defaultValue": "500",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "disabled",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "'Search...'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "onSearch",
                    "args": [
                        {
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setQuickFilter",
                    "args": [
                        {
                            "name": "term",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 42,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "term",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\r\nimport { AgGridAngular } from 'ag-grid-angular';\r\nimport { AgGridContext } from '../../interfaces/ag-grid-context';\r\n\r\nlet timer: any;\r\n@Component({\r\n  selector: 'ag-grid-toolbar-search',\r\n  templateUrl: './ag-grid-toolbar-search.component.html',\r\n  styleUrls: ['./ag-grid-toolbar-search.component.scss'],\r\n})\r\nexport class AgGridToolbarSearchComponent {\r\n  @Input() agGrid!: AgGridAngular;\r\n  @Input() debounceTime = 500;\r\n  @Input() disabled = false;\r\n  @Input() placeholder = 'Search...';\r\n\r\n  get context(): AgGridContext {\r\n    return this.agGrid.context || this.agGrid.gridOptions?.context;\r\n  }\r\n\r\n  onSearch({ target }: any) {\r\n    const { api } = this.agGrid;\r\n    clearTimeout(timer);\r\n    timer = setTimeout(() => {\r\n      const type = api.getModel().getType();\r\n      if (type === 'serverSide') {\r\n        this.setQuickFilter(target.value);\r\n        api.onFilterChanged();\r\n      } else {\r\n        api.setQuickFilter(target.value);\r\n        this.setQuickFilter(target.value);\r\n      }\r\n      if (\r\n        this.agGrid.gridOptions?.rowSelection !== 'multiple' &&\r\n        this.agGrid.rowSelection !== 'multiple'\r\n      ) {\r\n        api.deselectAll();\r\n      }\r\n    }, this.debounceTime);\r\n  }\r\n\r\n  setQuickFilter(term: string) {\r\n    if (this.context) {\r\n      this.context.quickFilterText = term;\r\n    }\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "input {\r\n  border: 1px solid var(--ag-border-color);\r\n  border-radius: 4px;\r\n  height: 30px;\r\n  padding: 0px 8px 0px 28px;\r\n  &:hover:not(:disabled) {\r\n    border-color: var(--ag-range-selection-border-color);\r\n  }\r\n  &:focus-visible {\r\n    outline: none;\r\n    border-color: var(--ag-range-selection-border-color);\r\n  }\r\n  &:disabled {\r\n    background-color: var(--ag-input-disabled-background-color);\r\n  }\r\n  background: white\r\n    url(\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' fill='gray' width='16' height='16' viewBox='0 0 16 16'><path d='M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z' ></path></svg>\")\r\n    no-repeat 8px center;\r\n}\r\n",
                    "styleUrl": "./ag-grid-toolbar-search.component.scss"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "context": {
                    "name": "context",
                    "getSignature": {
                        "name": "context",
                        "type": "",
                        "returnType": "AgGridContext",
                        "line": 17
                    }
                }
            },
            "templateData": "<input\r\n  type=\"search\"\r\n  [disabled]=\"disabled\"\r\n  [placeholder]=\"placeholder\"\r\n  (keyup)=\"onSearch($event)\"\r\n  (search)=\"onSearch($event)\"\r\n/>\r\n"
        }
    ],
    "modules": [
        {
            "name": "AgGridExpansionModule",
            "id": "module-AgGridExpansionModule-dcddcc8ac43ac336556725acfb5994379f77ea2ada6de3f92df476b48037e2400f2ac7ab2c217cf1c4fd977837c931cdac34f8b43d17683ab686466fabf9ab2d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/ag-grid-expansion.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AgGridExtensionComponent } from './ag-grid-expansion.component';\r\nimport { AgGridToolbarComponent } from './components/ag-grid-toolbar/ag-grid-toolbar.component';\r\nimport { AgGridToolbarActionComponent } from './components/ag-grid-toolbar-action/ag-grid-toolbar-action.component';\r\nimport { AgGridToolbarSearchComponent } from './components/ag-grid-toolbar-search/ag-grid-toolbar-search.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AgGridExtensionComponent,\r\n    AgGridToolbarComponent,\r\n    AgGridToolbarActionComponent,\r\n    AgGridToolbarSearchComponent,\r\n  ],\r\n  exports: [AgGridExtensionComponent, AgGridToolbarActionComponent],\r\n  imports: [CommonModule],\r\n})\r\nexport class AgGridExpansionModule {}\r\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AgGridExtensionComponent"
                        },
                        {
                            "name": "AgGridToolbarActionComponent"
                        },
                        {
                            "name": "AgGridToolbarComponent"
                        },
                        {
                            "name": "AgGridToolbarSearchComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "AgGridExtensionComponent"
                        },
                        {
                            "name": "AgGridToolbarActionComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "actions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n  ...actionsSets.standard,\r\n  {\r\n    disabled: true,\r\n    icon: 'home',\r\n    tooltip: 'Home',\r\n  },\r\n]"
            },
            {
                "name": "actionsSets",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/actions-sets.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  redoUndo: [presetActions.redo, presetActions.undo],\r\n  standard: [\r\n    presetActions.reset,\r\n    presetActions.fit,\r\n    presetActions.reload,\r\n    {},\r\n    presetActions.export,\r\n  ],\r\n  utility: [presetActions.reset, presetActions.fit, presetActions.reload],\r\n}"
            },
            {
                "name": "ContentProjections",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    debounceSearch: 500,\r\n    disableSearch: false,\r\n    enableSearch: true,\r\n    placeholderSearch: 'Search..',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      actions,\r\n      gridOptions,\r\n    },\r\n    template: `\r\n    <ag-grid-expansion\r\n      class=\"ag-theme-balham\"\r\n      [actions]=\"actions\"\r\n      [disableSearch]=\"disableSearch\"\r\n      [debounceSearch]=\"debounceSearch\"\r\n      [enableSearch]=\"enableSearch\"\r\n      [placeholderSearch]=\"placeholderSearch\">\r\n      <div toolbarLeft>toolbarLeft</div>\r\n      <div toolbarCenter>toolbarCenter</div>\r\n      <div toolbarRight>toolbarRight</div>\r\n      <ag-grid-toolbar-action actionsLeft tooltip=\"I'm here because of *actionsLeft* content projection\">arrow_left</ag-grid-toolbar-action>\r\n      <ag-grid-toolbar-action actionsRight tooltip=\"I'm here because of *actionsRight* content projection\">arrow_right</ag-grid-toolbar-action>\r\n      <ag-grid-angular\r\n        style=\"width: 100%; height: 320px;\"\r\n        [gridOptions]=\"gridOptions\">\r\n      </ag-grid-angular>\r\n    </ag-grid-expansion>\r\n    `,\r\n  }),\r\n}"
            },
            {
                "name": "gridOptions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AgGridOptions",
                "defaultValue": "{\r\n  columnDefs: [{ field: 'make' }, { field: 'model' }, { field: 'price' }],\r\n  enableRangeSelection: true,\r\n  rowData: [\r\n    { make: 'Toyota', model: 'Celica', price: 35000 },\r\n    { make: 'Ford', model: 'Mondeo', price: 32000 },\r\n    { make: 'Porsche', model: 'Boxster', price: 72000 },\r\n  ],\r\n  rowSelection: 'single',\r\n}"
            },
            {
                "name": "items",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/expansion/ag-grid-angular/src/stories/story-helpers/server-side-datasource.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[]"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AgGridExtensionComponent>",
                "defaultValue": "{\r\n  component: AgGridExtensionComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [AgGridModule, AgGridExpansionModule],\r\n    }),\r\n  ],\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      actions,\r\n      gridOptions,\r\n    },\r\n    template: `\r\n    <ag-grid-expansion\r\n      class=\"ag-theme-balham\"\r\n      [actions]=\"actions\"\r\n      [disableSearch]=\"disableSearch\"\r\n      [debounceSearch]=\"debounceSearch\"\r\n      [enableSearch]=\"enableSearch\"\r\n      [placeholderSearch]=\"placeholderSearch\">\r\n      <ag-grid-angular\r\n        style=\"width: 100%; height: 320px;\"\r\n        [gridOptions]=\"gridOptions\">\r\n      </ag-grid-angular>\r\n    </ag-grid-expansion>\r\n    `,\r\n  }),\r\n  tags: ['autodocs'],\r\n}"
            },
            {
                "name": "pkg",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/expansion/ag-grid-angular/src/lib/constants/index.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'@expansion/ag-grid-angular'"
            },
            {
                "name": "presetActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/actions-sets.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AgGridToolbarAction",
                "defaultValue": "{\r\n  export: {\r\n    icon: 'file_download',\r\n    tooltip: 'Export as csv',\r\n    clickFn: ({ api }) => {\r\n      api.exportDataAsCsv();\r\n    },\r\n  },\r\n  fit: {\r\n    icon: 'view_column',\r\n    tooltip: 'Fit columns',\r\n    clickFn: ({ api }) => {\r\n      api.sizeColumnsToFit();\r\n    },\r\n  },\r\n  /** Requires `context.reloadData` arrow function for client-side */\r\n  reload: {\r\n    icon: 'refresh',\r\n    tooltip: 'Reload data',\r\n    clickFn: (params) => {\r\n      const { api, context } = params;\r\n      const rowModelType = api.getModel().getType();\r\n      if (rowModelType === 'clientSide') {\r\n        if (context?.reloadData) {\r\n          context.reloadData(params);\r\n        } else {\r\n          console.warn(`${pkg}: 'context.reloadData()' not defined`);\r\n        }\r\n      } else if (rowModelType === 'serverSide') {\r\n        api.refreshServerSide({ route: [], purge: true });\r\n      }\r\n    },\r\n  },\r\n  redo: {\r\n    icon: 'redo',\r\n    tooltip: 'Redo',\r\n    clickFn: ({ columnApi }) => {\r\n      columnApi.resetColumnState();\r\n    },\r\n  },\r\n  reset: {\r\n    icon: 'restart_alt',\r\n    tooltip: 'Reset columns',\r\n    clickFn: ({ columnApi }) => {\r\n      columnApi.resetColumnState();\r\n    },\r\n  },\r\n  undo: {\r\n    icon: 'undo',\r\n    tooltip: 'Undo',\r\n    clickFn: ({ columnApi }) => {\r\n      columnApi.resetColumnState();\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/expansion/ag-grid-angular/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/i,\r\n      },\r\n    },\r\n  },\r\n}"
            },
            {
                "name": "SeachAndActions",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\r\n  args: {\r\n    debounceSearch: 500,\r\n    disableSearch: false,\r\n    enableSearch: true,\r\n    placeholderSearch: 'Search..',\r\n  },\r\n}"
            },
            {
                "name": "timer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            }
        ],
        "functions": [
            {
                "name": "generateRandomBrand",
                "file": "projects/expansion/ag-grid-angular/src/stories/story-helpers/server-side-datasource.service.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "generateRandomModel",
                "file": "projects/expansion/ag-grid-angular/src/stories/story-helpers/server-side-datasource.service.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "generateRandomPrice",
                "file": "projects/expansion/ag-grid-angular/src/stories/story-helpers/server-side-datasource.service.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            }
        ],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AgGridExtensionComponent>",
                "file": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts": [
                {
                    "name": "actions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n  ...actionsSets.standard,\r\n  {\r\n    disabled: true,\r\n    icon: 'home',\r\n    tooltip: 'Home',\r\n  },\r\n]"
                },
                {
                    "name": "ContentProjections",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    debounceSearch: 500,\r\n    disableSearch: false,\r\n    enableSearch: true,\r\n    placeholderSearch: 'Search..',\r\n  },\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      actions,\r\n      gridOptions,\r\n    },\r\n    template: `\r\n    <ag-grid-expansion\r\n      class=\"ag-theme-balham\"\r\n      [actions]=\"actions\"\r\n      [disableSearch]=\"disableSearch\"\r\n      [debounceSearch]=\"debounceSearch\"\r\n      [enableSearch]=\"enableSearch\"\r\n      [placeholderSearch]=\"placeholderSearch\">\r\n      <div toolbarLeft>toolbarLeft</div>\r\n      <div toolbarCenter>toolbarCenter</div>\r\n      <div toolbarRight>toolbarRight</div>\r\n      <ag-grid-toolbar-action actionsLeft tooltip=\"I'm here because of *actionsLeft* content projection\">arrow_left</ag-grid-toolbar-action>\r\n      <ag-grid-toolbar-action actionsRight tooltip=\"I'm here because of *actionsRight* content projection\">arrow_right</ag-grid-toolbar-action>\r\n      <ag-grid-angular\r\n        style=\"width: 100%; height: 320px;\"\r\n        [gridOptions]=\"gridOptions\">\r\n      </ag-grid-angular>\r\n    </ag-grid-expansion>\r\n    `,\r\n  }),\r\n}"
                },
                {
                    "name": "gridOptions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AgGridOptions",
                    "defaultValue": "{\r\n  columnDefs: [{ field: 'make' }, { field: 'model' }, { field: 'price' }],\r\n  enableRangeSelection: true,\r\n  rowData: [\r\n    { make: 'Toyota', model: 'Celica', price: 35000 },\r\n    { make: 'Ford', model: 'Mondeo', price: 32000 },\r\n    { make: 'Porsche', model: 'Boxster', price: 72000 },\r\n  ],\r\n  rowSelection: 'single',\r\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AgGridExtensionComponent>",
                    "defaultValue": "{\r\n  component: AgGridExtensionComponent,\r\n  decorators: [\r\n    moduleMetadata({\r\n      imports: [AgGridModule, AgGridExpansionModule],\r\n    }),\r\n  ],\r\n  render: (args) => ({\r\n    props: {\r\n      ...args,\r\n      actions,\r\n      gridOptions,\r\n    },\r\n    template: `\r\n    <ag-grid-expansion\r\n      class=\"ag-theme-balham\"\r\n      [actions]=\"actions\"\r\n      [disableSearch]=\"disableSearch\"\r\n      [debounceSearch]=\"debounceSearch\"\r\n      [enableSearch]=\"enableSearch\"\r\n      [placeholderSearch]=\"placeholderSearch\">\r\n      <ag-grid-angular\r\n        style=\"width: 100%; height: 320px;\"\r\n        [gridOptions]=\"gridOptions\">\r\n      </ag-grid-angular>\r\n    </ag-grid-expansion>\r\n    `,\r\n  }),\r\n  tags: ['autodocs'],\r\n}"
                },
                {
                    "name": "SeachAndActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\r\n  args: {\r\n    debounceSearch: 500,\r\n    disableSearch: false,\r\n    enableSearch: true,\r\n    placeholderSearch: 'Search..',\r\n  },\r\n}"
                }
            ],
            "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/actions-sets.ts": [
                {
                    "name": "actionsSets",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/actions-sets.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  redoUndo: [presetActions.redo, presetActions.undo],\r\n  standard: [\r\n    presetActions.reset,\r\n    presetActions.fit,\r\n    presetActions.reload,\r\n    {},\r\n    presetActions.export,\r\n  ],\r\n  utility: [presetActions.reset, presetActions.fit, presetActions.reload],\r\n}"
                },
                {
                    "name": "presetActions",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/actions-sets.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AgGridToolbarAction",
                    "defaultValue": "{\r\n  export: {\r\n    icon: 'file_download',\r\n    tooltip: 'Export as csv',\r\n    clickFn: ({ api }) => {\r\n      api.exportDataAsCsv();\r\n    },\r\n  },\r\n  fit: {\r\n    icon: 'view_column',\r\n    tooltip: 'Fit columns',\r\n    clickFn: ({ api }) => {\r\n      api.sizeColumnsToFit();\r\n    },\r\n  },\r\n  /** Requires `context.reloadData` arrow function for client-side */\r\n  reload: {\r\n    icon: 'refresh',\r\n    tooltip: 'Reload data',\r\n    clickFn: (params) => {\r\n      const { api, context } = params;\r\n      const rowModelType = api.getModel().getType();\r\n      if (rowModelType === 'clientSide') {\r\n        if (context?.reloadData) {\r\n          context.reloadData(params);\r\n        } else {\r\n          console.warn(`${pkg}: 'context.reloadData()' not defined`);\r\n        }\r\n      } else if (rowModelType === 'serverSide') {\r\n        api.refreshServerSide({ route: [], purge: true });\r\n      }\r\n    },\r\n  },\r\n  redo: {\r\n    icon: 'redo',\r\n    tooltip: 'Redo',\r\n    clickFn: ({ columnApi }) => {\r\n      columnApi.resetColumnState();\r\n    },\r\n  },\r\n  reset: {\r\n    icon: 'restart_alt',\r\n    tooltip: 'Reset columns',\r\n    clickFn: ({ columnApi }) => {\r\n      columnApi.resetColumnState();\r\n    },\r\n  },\r\n  undo: {\r\n    icon: 'undo',\r\n    tooltip: 'Undo',\r\n    clickFn: ({ columnApi }) => {\r\n      columnApi.resetColumnState();\r\n    },\r\n  },\r\n}"
                }
            ],
            "projects/expansion/ag-grid-angular/src/stories/story-helpers/server-side-datasource.service.ts": [
                {
                    "name": "items",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/expansion/ag-grid-angular/src/stories/story-helpers/server-side-datasource.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[]"
                }
            ],
            "projects/expansion/ag-grid-angular/src/lib/constants/index.ts": [
                {
                    "name": "pkg",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/expansion/ag-grid-angular/src/lib/constants/index.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'@expansion/ag-grid-angular'"
                }
            ],
            "projects/expansion/ag-grid-angular/.storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/expansion/ag-grid-angular/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/i,\r\n      },\r\n    },\r\n  },\r\n}"
                }
            ],
            "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts": [
                {
                    "name": "timer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ]
        },
        "groupedFunctions": {
            "projects/expansion/ag-grid-angular/src/stories/story-helpers/server-side-datasource.service.ts": [
                {
                    "name": "generateRandomBrand",
                    "file": "projects/expansion/ag-grid-angular/src/stories/story-helpers/server-side-datasource.service.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                },
                {
                    "name": "generateRandomModel",
                    "file": "projects/expansion/ag-grid-angular/src/stories/story-helpers/server-side-datasource.service.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                },
                {
                    "name": "generateRandomPrice",
                    "file": "projects/expansion/ag-grid-angular/src/stories/story-helpers/server-side-datasource.service.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AgGridExtensionComponent>",
                    "file": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 15,
        "status": "low",
        "files": [
            {
                "filePath": "projects/expansion/ag-grid-angular/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/actions-sets.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsSets",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/actions-sets.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "presetActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/ag-grid-expansion.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AgGridExtensionComponent",
                "coveragePercent": 60,
                "coverageCount": "6/10",
                "status": "good"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar-action/ag-grid-toolbar-action.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AgGridToolbarActionComponent",
                "coveragePercent": 33,
                "coverageCount": "2/6",
                "status": "medium"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AgGridToolbarSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar-search/ag-grid-toolbar-search.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "timer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/components/ag-grid-toolbar/ag-grid-toolbar.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AgGridToolbarComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-context.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AgGridContext",
                "coveragePercent": 85,
                "coverageCount": "6/7",
                "status": "very-good"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-event.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AgGridEvent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-filters.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AgGridFilter",
                "coveragePercent": 50,
                "coverageCount": "5/10",
                "status": "medium"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-filters.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AgGridFilters",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-options.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AgGridOptions",
                "coveragePercent": 100,
                "coverageCount": "2/2",
                "status": "very-good"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-toolbar-action.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AgGridToolbarAction",
                "coveragePercent": 85,
                "coverageCount": "6/7",
                "status": "very-good"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/lib/ag-grid-expansion/interfaces/ag-grid-toolbar-action.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AgGridToolbarActionEvent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/lib/constants/index.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "pkg",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ContentProjections",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "gridOptions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/stories/ag-grid-expansion.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SeachAndActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/stories/story-helpers/grid-options.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "GridOptionsService",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/stories/story-helpers/server-side-datasource.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ServerSideDatasourceService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/stories/story-helpers/server-side-datasource.service.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "generateRandomBrand",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/stories/story-helpers/server-side-datasource.service.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "generateRandomModel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/stories/story-helpers/server-side-datasource.service.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "generateRandomPrice",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/expansion/ag-grid-angular/src/stories/story-helpers/server-side-datasource.service.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "items",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}