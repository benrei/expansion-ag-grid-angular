"use strict";(self.webpackChunkexpansion_ag_grid_angular=self.webpackChunkexpansion_ag_grid_angular||[]).push([[720],{"./projects/expansion/ag-grid-angular/src/stories/directives/create-row.stories.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ClientSide:()=>ClientSide,FlashAddedRows:()=>FlashAddedRows,default:()=>create_row_stories});var dist=__webpack_require__("./node_modules/@storybook/angular/dist/index.mjs"),tslib_es6=__webpack_require__("./node_modules/tslib/tslib.es6.mjs"),core=__webpack_require__("./node_modules/@angular/core/fesm2022/core.mjs"),ag_grid_angular=__webpack_require__("./node_modules/ag-grid-angular/fesm2015/ag-grid-angular.js"),ag_grid_angular_package=__webpack_require__("./projects/expansion/ag-grid-angular/package.json");let CreateRowDirective=class CreateRowDirective{constructor(agGrid){this.agGrid=agGrid,this.enableFlashInsertedRows=!1,this.idField="id",this.suppressPostSortRows=!1,this.creationRowReady=new core.EventEmitter,this.creationRowReset=new core.EventEmitter,this.rowInserted=new core.EventEmitter,this.addCount=0,this.agGrid.editType="fullRow"}get editType(){return this.agGrid.api.getModel().getType()}ngOnInit(){this.suppressPostSortRows||(this.agGrid.postSortRows=({nodes})=>{for(let i=0;i<nodes.length;i++)nodes[i].id===CREATE_ROW&&nodes.splice(nodes.length-1,0,nodes.splice(i,1)[0])})}rowDataUpdated(event){this.addCreateRow(event)}addCreateRow(event){if(event.api.getRowNode(CREATE_ROW))return;const type=event.api.getModel().getType();if("clientSide"===type)this.createClientSideCreateRow(event);else console.warn(`${ag_grid_angular_package.u2}: ${type} not supported`)}rowValueChanged(event){const{api,columnApi,data,node}=event;if(node.id===CREATE_ROW){data[this.idField]||(data[this.idField]=`${CREATE_ROW}-${this.addCount}`);const transaction=api.applyTransaction({add:[data],addIndex:node.rowIndex});transaction&&(this.enableFlashInsertedRows&&api.flashCells({rowNodes:transaction.add}),this.addCount++,this.rowInserted.emit(this.buildEvent(transaction.add[0])));const columns=columnApi.getAllDisplayedColumns(),firstEditColumn=columns.find((c=>c.isCellEditable(node)));api.getCellRanges()?.length&&api.clearRangeSelection(),api.setFocusedCell(node.rowIndex,firstEditColumn||columns[0]),node.setData(null),this.creationRowReset.emit(this.buildEvent(node))}}createClientSideCreateRow({api}){const creationRowData={[this.idField]:CREATE_ROW},node=api.applyTransaction({add:[creationRowData]}).add[0];node.setData(null),node.id=CREATE_ROW,this.creationRowReady.emit(this.buildEvent(node))}buildEvent(node){const{api,columnApi,context,gridOptions}=this.agGrid;return{api,columnApi,context:context||gridOptions?.context,node}}static#_=this.ctorParameters=()=>[{type:ag_grid_angular.N8}];static#_2=this.propDecorators={enableFlashInsertedRows:[{type:core.Input}],idField:[{type:core.Input}],suppressPostSortRows:[{type:core.Input}],creationRowReady:[{type:core.Output}],creationRowReset:[{type:core.Output}],rowInserted:[{type:core.Output}],rowDataUpdated:[{type:core.HostListener,args:["firstDataRendered",["$event"]]},{type:core.HostListener,args:["rowDataUpdated",["$event"]]}],rowValueChanged:[{type:core.HostListener,args:["rowValueChanged",["$event"]]}]}};CreateRowDirective=(0,tslib_es6.gn)([(0,core.Directive)({selector:"[agCreateRow]"})],CreateRowDirective);const CREATE_ROW="CREATE_ROW";let ServerSideDatasourceService=class ServerSideDatasourceService{constructor(){}createServerSideDatasource(dataCount=100){const server=this.createFakeServer(dataCount);return{getRows:params=>{console.log("[Datasource] - rows requested by grid: ",params.request);const response=server.getData(params.request);setTimeout((function(){response.success?params.success({rowData:response.rows}):params.fail()}),500)}}}generateItems(dataCount){const items=[];for(let i=0;i<=dataCount;i++)items.push({id:i,brand:generateRandomBrand(),model:generateRandomModel(),price:generateRandomPrice()});return items}createFakeServer(dataCount){const items=this.generateItems(dataCount);return{getData:request=>({success:!0,rows:items.slice(request.startRow,request.endRow)})}}static#_=this.ctorParameters=()=>[]};ServerSideDatasourceService=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],ServerSideDatasourceService);const items=[];for(let i=0;i<=100;i++)items.push({id:i,brand:generateRandomBrand(),model:generateRandomModel(),price:generateRandomPrice()});function generateRandomBrand(){const brand=["Honda","Chevrolet","Nissan","Volkswagen","Hyundai"];return brand[Math.floor(Math.random()*brand.length)]}function generateRandomModel(){const models=["Civic","Malibu","Altima","Jetta","Elantra"];return models[Math.floor(Math.random()*models.length)]}function generateRandomPrice(){return Math.floor(5e4*Math.random())+2e4}let GridOptionsService=class GridOptionsService{constructor(serverSideDatasourceService){this.serverSideDatasourceService=serverSideDatasourceService,this.getDefaultColDef=()=>({editable:!0,sortable:!0}),this.core=()=>({columnDefs:[{field:"id",hide:!0},{field:"brand"},{field:"model"},{field:"price"}],defaultColDef:this.getDefaultColDef(),enableCellChangeFlash:!0,editType:"fullRow",getRowId:params=>params.data.id,rowSelection:"single"}),this.clientSide=()=>({...this.core(),rowData:this.serverSideDatasourceService.generateItems(5),rowModelType:"clientSide"}),this.serverSide=()=>({...this.core(),rowModelType:"serverSide",serverSideDatasource:this.serverSideDatasourceService.createServerSideDatasource(100)})}static#_=this.ctorParameters=()=>[{type:ServerSideDatasourceService}]};GridOptionsService=(0,tslib_es6.gn)([(0,core.Injectable)({providedIn:"root"})],GridOptionsService);const gridOptionsService=new GridOptionsService(new ServerSideDatasourceService),create_row_stories={title:"Directives/Create Row",component:CreateRowDirective,decorators:[(0,dist.moduleMetadata)({imports:[ag_grid_angular.sF]})],tags:["autodocs"],render:args=>({props:{...args,gridOptions:gridOptionsService.clientSide()},template:'\n      <ag-grid-angular\n        class="ag-theme-balham"\n        style="width: 100%; height: 320px;"\n        agCreateRow\n        [enableFlashInsertedRows]="enableFlashInsertedRows"\n        [idField]="idField || \'id\'"\n        [gridOptions]="gridOptions">\n    </ag-grid-angular>\n    '})},ClientSide={args:{}},FlashAddedRows={args:{enableFlashInsertedRows:!0}}},"./projects/expansion/ag-grid-angular/package.json":module=>{module.exports=JSON.parse('{"u2":"@expansion/ag-grid-angular"}')}}]);